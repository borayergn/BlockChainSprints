{
	"id": "152d8a5b6c0343cb2e4f923635852596",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Sprint1.sol": {
				"content": "pragma solidity ^0.5.17;\r\n\r\n\r\ncontract PowerContractInterface{\r\n\r\n     function getCellHash(int256 x, int256 y) public view returns (bytes32);\r\n     function getCellNonce(int256 x, int256 y) public view returns (bytes32);\r\n     function getCellPower(int256 x, int256 y) public view returns (int256);\r\n     function getCellTeamNumber(int256 x, int256 y) public view returns (int256);\r\n     function getSprintNumber() public view returns (int256);\r\n     function getXdimension() public view returns (int256);\r\n     function getYdimension() public view returns (int256);\r\n     function getTeamNumberFromAccount(address teamAccount) public view returns (int);\r\n     function setMyTeamContract(address contractAddress) public;\r\n     function getMyTeamContract() public view returns (address);\r\n     function getMyTeamCount() public view returns (int);\r\n     function getMyTeamCallCount() public view returns (int);\r\n     function showCellTeamNumbers() public view returns (string memory);\r\n     function getMyTeamNumber() public view returns (int);\r\n     function showLeaderBoard() public view returns (string memory);\r\n     function showLeaderBoard_Calls() public view returns (string memory);\r\n     function getTxOrigin() public view returns (address);\r\n     function setCellsFromContract(int x, int y, bytes32 nonce) public payable returns (bytes32);\r\n     function getTotalCalls() public view returns (uint);\r\n\r\n}\r\n\r\n\r\ncontract BaBoBa{\r\n     \r\n     address powerContractAddres = 0xA7c40D644bDB571F98D72A08AF2A1Fb4Ab4f24fe;\r\n     address myAdd = 0x06D99001C37C88f996f629698c822F19dB68388D;\r\n     \r\n\r\n     function arrangeContract() public returns(address){\r\n          \r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          pc_interface.setMyTeamContract(msg.sender); \r\n          address teamAddress = pc_interface.getMyTeamContract();\r\n          return teamAddress;\r\n     }\r\n\r\n     function teamNumber() public view returns(int){\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          int team_number = pc_interface.getMyTeamNumber();\r\n          return team_number;\r\n     }\r\n\r\n     address public t_address =  arrangeContract();\r\n\r\n     \r\n     \r\n     function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r\n\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          int256 teamNo = pc_interface.getMyTeamNumber();\r\n          bytes32 bytes32_TeamNo = bytes32(teamNo);\r\n\r\n          bytes32  cellHash = pc_interface.getCellHash(x,y);\r\n          uint256  pow = uint256(pc_interface.getCellPower(x,y));\r\n          uint  nonce = 1; \r\n          bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n\r\n          uint  multiplication = uint(newHash)*(2**pow);\r\n          bytes32  finalHash = bytes32(multiplication);\r\n\r\n\r\n          if(cellHash > finalHash){\r\n               while(cellHash > finalHash){\r\n               finalHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n               multiplication = uint(finalHash)*(2**pow);\r\n               finalHash = bytes32(multiplication);\r\n\r\n               nonce++;\r\n                    }\r\n\r\n               //Nonce was returning one more than needed because of condition. So its one decreased here after loop.\r\n               nonce--;\r\n               }\r\n          \r\n               return (nonce,bytes32(nonce),cellHash,finalHash,pow);\r\n          } \r\n\r\n\r\n     //To use this function on VMs other functions that interacts with power contract should be commented.\r\n     /*\r\n     function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r\n\r\n          int256 teamNo = 5;\r\n          bytes32 bytes32_TeamNo = bytes32(teamNo);\r\n\r\n          bytes32  cellHash = hashOfCell;\r\n          uint256  pow = power;\r\n          uint  nonce = 1; \r\n          bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n\r\n          uint  multiplication = uint(newHash)*(2**pow);\r\n          bytes32  finalHash = bytes32(multiplication);\r\n\r\n          uint256 int_cellHash = uint256(cellHash);\r\n          uint256 int_newHash = uint256(newHash);\r\n\r\n          if(int_cellHash > int_newHash){\r\n               while(int_cellHash > int_newHash){\r\n               int_newHash = uint256(sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)));\r\n\r\n               nonce++;\r\n                    }\r\n\r\n               //Nonce was returning one more than needed because of condition. So its one decreased here after loop.\r\n               nonce--;\r\n               }\r\n          \r\n               return (nonce,bytes32(nonce),int_cellHash,int_newHash,pow);\r\n     }\r\n     */\r\n\r\n     //Mode parameter is for choosing which mode(function to call) to choose\r\n     //1 = Finding a powerfull nonce which will be hard to recapture\r\n     //0 = will be the ordinary next valid nonce\r\n     function captureCell(int x, int y , uint mode,uint limit) payable public returns(bytes32){\r\n\r\n          require(mode == 1 || mode == 0,\"Invalid mode\");\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n\r\n          (,bytes32 nonce,,,) = findNonce(x,y);\r\n\r\n       \r\n          if(mode == 0) {\r\n               (,nonce,,,) = findNonce(x,y);\r\n          }\r\n          else{\r\n               (,nonce,,,) = findPowerfullNonce(x,y,limit);\r\n          }        \r\n          \r\n\r\n          bytes32 newHash = pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce);\r\n\r\n          return newHash;\r\n     }        \r\n\r\n     //Functions to be written for increasing functionality with sending one request for taking multiple cells.\r\n\r\n     function captureRow(int row,uint mode,uint limit) payable public{\r\n          require(mode == 1 || mode == 0,\"Invalid Mode\");\r\n\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          bytes32 nonce;\r\n          for(int256 i = 0 ; i < pc_interface.getXdimension(); i++){\r\n                      \r\n               if(mode == 0) {\r\n                    (,nonce,,,) = findNonce(row,i);\r\n               }\r\n               else{\r\n                    (,nonce,,,) = findPowerfullNonce(row,i,limit);\r\n               }   \r\n\r\n               pc_interface.setCellsFromContract.value(0.1 ether)(row,i,nonce);\r\n\r\n          }\r\n     }\r\n\r\n     function captureColumn(int column,uint mode , uint limit) payable public{\r\n          require(mode == 1 || mode == 0,\"Invalid Mode\");\r\n\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          bytes32 nonce;\r\n          for(int256 i = 0 ; i < pc_interface.getYdimension(); i++){\r\n                      \r\n               if(mode == 0) {\r\n                    (,nonce,,,) = findNonce(i,column);\r\n               }\r\n               else{\r\n                    (,nonce,,,) = findPowerfullNonce(i,column,limit);\r\n               }   \r\n\r\n               pc_interface.setCellsFromContract.value(0.1 ether)(i,column,nonce);\r\n\r\n          }\r\n     }\r\n\r\n     //Only available for ordinary capture\r\n     function captureSquare(int startPointX , int startPointY,int sideLength) payable public{\r\n\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n\r\n          require(\r\n          (startPointX+sideLength) < pc_interface.getXdimension() || (startPointY+sideLength) < pc_interface.getYdimension()\r\n          ,\"Square is out of range.\"\r\n          );\r\n\r\n          bytes32 nonce;\r\n          for(int i = startPointX; i < (startPointX+sideLength) ; i++){\r\n               for(int j = startPointY; j < (startPointY+sideLength) ; j++){\r\n                    (,nonce,,,) = findNonce(i,j);\r\n                    pc_interface.setCellsFromContract.value(0.1 ether)(i,j,nonce);\r\n               }\r\n          }\r\n     }\r\n\r\n     //Function to get more stronger nonce number to make the cell more unrecapturable.\r\n     function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          int256 teamNo = pc_interface.getMyTeamNumber();\r\n          bytes32 bytes32_TeamNo = bytes32(teamNo);\r\n\r\n          bytes32  cellHash = pc_interface.getCellHash(x,y);\r\n          uint256  pow = uint256(pc_interface.getCellPower(x,y));\r\n          uint  nonce = 1; \r\n\r\n          uint256 counter = 0;\r\n          bytes32 finalHash;\r\n          uint256 multiplication;\r\n                   \r\n          while(counter < limit){\r\n          finalHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n          multiplication = uint(finalHash)*(2**pow);\r\n          finalHash = bytes32(multiplication);\r\n          nonce++;\r\n          if(cellHash<finalHash){\r\n               counter++;\r\n               }              \r\n          }\r\n          nonce--;\r\n         \r\n          return (nonce,bytes32(nonce),cellHash,finalHash,pow);        \r\n     }\r\n\r\n    \r\n     //TODO: Finish this function\r\n     function showCellOwners() public view returns(int256[] memory){\r\n          PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n          int256 currentTeam;\r\n          int256[] memory teamsArr;\r\n          uint256 index = 0;\r\n          for(int256 i = 0; i < pc_interface.getXdimension();i++){\r\n               for(int256 j = 0; j < pc_interface.getYdimension();j++){\r\n                    currentTeam = pc_interface.getCellTeamNumber(i,j);\r\n                    teamsArr[index] = currentTeam;\r\n               }\r\n          }\r\n          return teamsArr;\r\n     }\r\n     \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Sprint1.sol": {
				"BaBoBa": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "arrangeContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "mode",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "captureCell",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "column",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "mode",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "captureColumn",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "row",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "mode",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "captureRow",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "startPointX",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "startPointY",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "sideLength",
									"type": "int256"
								}
							],
							"name": "captureSquare",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "findNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "findPowerfullNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showCellOwners",
							"outputs": [
								{
									"internalType": "int256[]",
									"name": "",
									"type": "int256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "t_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "teamNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Sprint1.sol\":1418:9685  contract BaBoBa{\r... */\n  mstore(0x40, 0x80)\n    /* \"Sprint1.sol\":1478:1520  0xA7c40D644bDB571F98D72A08AF2A1Fb4Ab4f24fe */\n  0xa7c40d644bdb571f98d72a08af2a1fb4ab4f24fe\n    /* \"Sprint1.sol\":1448:1520  address powerContractAddres = 0xA7c40D644bDB571F98D72A08AF2A1Fb4Ab4f24fe */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Sprint1.sol\":1544:1586  0x06D99001C37C88f996f629698c822F19dB68388D */\n  0x06d99001c37c88f996f629698c822f19db68388d\n    /* \"Sprint1.sol\":1528:1586  address myAdd = 0x06D99001C37C88f996f629698c822F19dB68388D */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Sprint1.sol\":2209:2226  arrangeContract() */\n  tag_1\n    /* \"Sprint1.sol\":2209:2224  arrangeContract */\n  shl(0x20, tag_2)\n    /* \"Sprint1.sol\":2209:2226  arrangeContract() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"Sprint1.sol\":2181:2226  address public t_address =  arrangeContract() */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Sprint1.sol\":1418:9685  contract BaBoBa{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_3:\n    /* \"Sprint1.sol\":1418:9685  contract BaBoBa{\r... */\n  pop\n  jump(tag_4)\n    /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\ntag_2:\n    /* \"Sprint1.sol\":1645:1652  address */\n  0x00\n    /* \"Sprint1.sol\":1678:1713  PowerContractInterface pc_interface */\n  dup1\n    /* \"Sprint1.sol\":1739:1758  powerContractAddres */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Sprint1.sol\":1678:1759  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n  swap1\n  pop\n    /* \"Sprint1.sol\":1772:1784  pc_interface */\n  dup1\n    /* \"Sprint1.sol\":1772:1802  pc_interface.setMyTeamContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x2a9c1512\n    /* \"Sprint1.sol\":1803:1813  msg.sender */\n  caller\n    /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_6\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_6:\n    /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n  pop\n  gas\n  call\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_7:\n    /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n  pop\n  pop\n  pop\n  pop\n    /* \"Sprint1.sol\":1828:1847  address teamAddress */\n  0x00\n    /* \"Sprint1.sol\":1850:1862  pc_interface */\n  dup2\n    /* \"Sprint1.sol\":1850:1880  pc_interface.getMyTeamContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x5e94a6a4\n    /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_8:\n    /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_9\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_9:\n    /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_10:\n    /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Sprint1.sol\":1828:1882  address teamAddress = pc_interface.getMyTeamContract() */\n  swap1\n  pop\n    /* \"Sprint1.sol\":1902:1913  teamAddress */\n  dup1\n    /* \"Sprint1.sol\":1895:1913  return teamAddress */\n  swap3\n  pop\n  pop\n  pop\n    /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\n  swap1\n  jump\t// out\n    /* \"Sprint1.sol\":1418:9685  contract BaBoBa{\r... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sprint1.sol\":1418:9685  contract BaBoBa{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6881e114\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x6881e114\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7ba334ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc49b72c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdf3e164a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf8263904\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x045bbbb2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0cd9a64d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e7af8f7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1b0d9294\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4f15f351\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Sprint1.sol\":1931:2172  function teamNumber() public view returns(int){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"Sprint1.sol\":1931:2172  function teamNumber() public view returns(int){\r... */\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":2181:2226  address public t_address =  arrangeContract() */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"Sprint1.sol\":2181:2226  address public t_address =  arrangeContract() */\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":4977:5612  function captureCell(int x, int y , uint mode,uint limit) payable public returns(bytes32){\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"Sprint1.sol\":4977:5612  function captureCell(int x, int y , uint mode,uint limit) payable public returns(bytes32){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":9088:9675  function showCellOwners() public view returns(int256[] memory){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"Sprint1.sol\":9088:9675  function showCellOwners() public view returns(int256[] memory){\r... */\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_25:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_25)\n    tag_27:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Sprint1.sol\":9088:9675  function showCellOwners() public view returns(int256[] memory){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":7978:9038  function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"Sprint1.sol\":7978:9038  function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"Sprint1.sol\":7978:9038  function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":2250:3506  function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"Sprint1.sol\":2250:3506  function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"Sprint1.sol\":2250:3506  function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sprint1.sol\":6413:7090  function captureColumn(int column,uint mode , uint limit) payable public{\r... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"Sprint1.sol\":6413:7090  function captureColumn(int column,uint mode , uint limit) payable public{\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"Sprint1.sol\":7143:7880  function captureSquare(int startPointX , int startPointY,int sideLength) payable public{\r... */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"Sprint1.sol\":7143:7880  function captureSquare(int startPointX , int startPointY,int sideLength) payable public{\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Sprint1.sol\":5744:6404  function captureRow(int row,uint mode,uint limit) payable public{\r... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"Sprint1.sol\":5744:6404  function captureRow(int row,uint mode,uint limit) payable public{\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Sprint1.sol\":1931:2172  function teamNumber() public view returns(int){\r... */\n    tag_15:\n        /* \"Sprint1.sol\":1973:1976  int */\n      0x00\n        /* \"Sprint1.sol\":1990:2025  PowerContractInterface pc_interface */\n      dup1\n        /* \"Sprint1.sol\":2051:2070  powerContractAddres */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":1990:2071  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2084:2099  int team_number */\n      0x00\n        /* \"Sprint1.sol\":2102:2114  pc_interface */\n      dup2\n        /* \"Sprint1.sol\":2102:2130  pc_interface.getMyTeamNumber */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb2de2d40\n        /* \"Sprint1.sol\":2102:2132  pc_interface.getMyTeamNumber() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Sprint1.sol\":2102:2132  pc_interface.getMyTeamNumber() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"Sprint1.sol\":2102:2132  pc_interface.getMyTeamNumber() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"Sprint1.sol\":2102:2132  pc_interface.getMyTeamNumber() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2084:2132  int team_number = pc_interface.getMyTeamNumber() */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2152:2163  team_number */\n      dup1\n        /* \"Sprint1.sol\":2145:2163  return team_number */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":1931:2172  function teamNumber() public view returns(int){\r... */\n      swap1\n      jump\t// out\n        /* \"Sprint1.sol\":2181:2226  address public t_address =  arrangeContract() */\n    tag_18:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Sprint1.sol\":4977:5612  function captureCell(int x, int y , uint mode,uint limit) payable public returns(bytes32){\r... */\n    tag_21:\n        /* \"Sprint1.sol\":5058:5065  bytes32 */\n      0x00\n        /* \"Sprint1.sol\":5097:5098  1 */\n      0x01\n        /* \"Sprint1.sol\":5089:5093  mode */\n      dup4\n        /* \"Sprint1.sol\":5089:5098  mode == 1 */\n      eq\n        /* \"Sprint1.sol\":5089:5111  mode == 1 || mode == 0 */\n      dup1\n      tag_53\n      jumpi\n      pop\n        /* \"Sprint1.sol\":5110:5111  0 */\n      0x00\n        /* \"Sprint1.sol\":5102:5106  mode */\n      dup4\n        /* \"Sprint1.sol\":5102:5111  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":5089:5111  mode == 1 || mode == 0 */\n    tag_53:\n        /* \"Sprint1.sol\":5081:5127  require(mode == 1 || mode == 0,\"Invalid mode\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c6964206d6f64650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Sprint1.sol\":5140:5175  PowerContractInterface pc_interface */\n      0x00\n        /* \"Sprint1.sol\":5201:5220  powerContractAddres */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":5140:5221  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":5238:5251  bytes32 nonce */\n      0x00\n        /* \"Sprint1.sol\":5258:5272  findNonce(x,y) */\n      tag_55\n        /* \"Sprint1.sol\":5268:5269  x */\n      dup8\n        /* \"Sprint1.sol\":5270:5271  y */\n      dup8\n        /* \"Sprint1.sol\":5258:5267  findNonce */\n      tag_38\n        /* \"Sprint1.sol\":5258:5272  findNonce(x,y) */\n      jump\t// in\n    tag_55:\n        /* \"Sprint1.sol\":5236:5272  (,bytes32 nonce,,,) = findNonce(x,y) */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":5307:5308  0 */\n      0x00\n        /* \"Sprint1.sol\":5299:5303  mode */\n      dup6\n        /* \"Sprint1.sol\":5299:5308  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":5296:5461  if(mode == 0) {\r... */\n      iszero\n      tag_56\n      jumpi\n        /* \"Sprint1.sol\":5342:5356  findNonce(x,y) */\n      tag_57\n        /* \"Sprint1.sol\":5352:5353  x */\n      dup8\n        /* \"Sprint1.sol\":5354:5355  y */\n      dup8\n        /* \"Sprint1.sol\":5342:5351  findNonce */\n      tag_38\n        /* \"Sprint1.sol\":5342:5356  findNonce(x,y) */\n      jump\t// in\n    tag_57:\n        /* \"Sprint1.sol\":5328:5356  (,nonce,,,) = findNonce(x,y) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":5296:5461  if(mode == 0) {\r... */\n      jump(tag_58)\n    tag_56:\n        /* \"Sprint1.sol\":5418:5447  findPowerfullNonce(x,y,limit) */\n      tag_59\n        /* \"Sprint1.sol\":5437:5438  x */\n      dup8\n        /* \"Sprint1.sol\":5439:5440  y */\n      dup8\n        /* \"Sprint1.sol\":5441:5446  limit */\n      dup7\n        /* \"Sprint1.sol\":5418:5436  findPowerfullNonce */\n      tag_31\n        /* \"Sprint1.sol\":5418:5447  findPowerfullNonce(x,y,limit) */\n      jump\t// in\n    tag_59:\n        /* \"Sprint1.sol\":5404:5447  (,nonce,,,) = findPowerfullNonce(x,y,limit) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":5296:5461  if(mode == 0) {\r... */\n    tag_58:\n        /* \"Sprint1.sol\":5495:5510  bytes32 newHash */\n      0x00\n        /* \"Sprint1.sol\":5513:5525  pc_interface */\n      dup3\n        /* \"Sprint1.sol\":5513:5546  pc_interface.setCellsFromContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f8e0b48\n        /* \"Sprint1.sol\":5553:5562  0.1 ether */\n      0x016345785d8a0000\n        /* \"Sprint1.sol\":5564:5565  x */\n      dup11\n        /* \"Sprint1.sol\":5566:5567  y */\n      dup11\n        /* \"Sprint1.sol\":5568:5573  nonce */\n      dup7\n        /* \"Sprint1.sol\":5513:5574  pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"Sprint1.sol\":5513:5574  pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"Sprint1.sol\":5513:5574  pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n        /* \"Sprint1.sol\":5513:5574  pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":5495:5574  bytes32 newHash = pc_interface.setCellsFromContract.value(0.1 ether)(x,y,nonce) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":5596:5603  newHash */\n      dup1\n        /* \"Sprint1.sol\":5589:5603  return newHash */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":4977:5612  function captureCell(int x, int y , uint mode,uint limit) payable public returns(bytes32){\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Sprint1.sol\":9088:9675  function showCellOwners() public view returns(int256[] memory){\r... */\n    tag_24:\n        /* \"Sprint1.sol\":9134:9149  int256[] memory */\n      0x60\n        /* \"Sprint1.sol\":9163:9198  PowerContractInterface pc_interface */\n      0x00\n        /* \"Sprint1.sol\":9224:9243  powerContractAddres */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":9163:9244  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":9257:9275  int256 currentTeam */\n      0x00\n        /* \"Sprint1.sol\":9288:9312  int256[] memory teamsArr */\n      0x60\n        /* \"Sprint1.sol\":9325:9338  uint256 index */\n      0x00\n        /* \"Sprint1.sol\":9341:9342  0 */\n      dup1\n        /* \"Sprint1.sol\":9325:9342  uint256 index = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":9359:9367  int256 i */\n      0x00\n        /* \"Sprint1.sol\":9370:9371  0 */\n      dup1\n        /* \"Sprint1.sol\":9359:9371  int256 i = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":9355:9639  for(int256 i = 0; i < pc_interface.getXdimension();i++){\r... */\n    tag_64:\n        /* \"Sprint1.sol\":9377:9389  pc_interface */\n      dup5\n        /* \"Sprint1.sol\":9377:9403  pc_interface.getXdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x26c19e40\n        /* \"Sprint1.sol\":9377:9405  pc_interface.getXdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"Sprint1.sol\":9377:9405  pc_interface.getXdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"Sprint1.sol\":9377:9405  pc_interface.getXdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"Sprint1.sol\":9377:9405  pc_interface.getXdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":9373:9374  i */\n      dup2\n        /* \"Sprint1.sol\":9373:9405  i < pc_interface.getXdimension() */\n      slt\n        /* \"Sprint1.sol\":9355:9639  for(int256 i = 0; i < pc_interface.getXdimension();i++){\r... */\n      iszero\n      tag_65\n      jumpi\n        /* \"Sprint1.sol\":9432:9440  int256 j */\n      0x00\n        /* \"Sprint1.sol\":9443:9444  0 */\n      dup1\n        /* \"Sprint1.sol\":9432:9444  int256 j = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":9428:9626  for(int256 j = 0; j < pc_interface.getYdimension();j++){\r... */\n    tag_70:\n        /* \"Sprint1.sol\":9450:9462  pc_interface */\n      dup6\n        /* \"Sprint1.sol\":9450:9476  pc_interface.getYdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfafe7005\n        /* \"Sprint1.sol\":9450:9478  pc_interface.getYdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_73:\n        /* \"Sprint1.sol\":9450:9478  pc_interface.getYdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"Sprint1.sol\":9450:9478  pc_interface.getYdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n        /* \"Sprint1.sol\":9450:9478  pc_interface.getYdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":9446:9447  j */\n      dup2\n        /* \"Sprint1.sol\":9446:9478  j < pc_interface.getYdimension() */\n      slt\n        /* \"Sprint1.sol\":9428:9626  for(int256 j = 0; j < pc_interface.getYdimension();j++){\r... */\n      iszero\n      tag_71\n      jumpi\n        /* \"Sprint1.sol\":9520:9532  pc_interface */\n      dup6\n        /* \"Sprint1.sol\":9520:9550  pc_interface.getCellTeamNumber */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x912c2162\n        /* \"Sprint1.sol\":9551:9552  i */\n      dup4\n        /* \"Sprint1.sol\":9553:9554  j */\n      dup4\n        /* \"Sprint1.sol\":9520:9555  pc_interface.getCellTeamNumber(i,j) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_76:\n        /* \"Sprint1.sol\":9520:9555  pc_interface.getCellTeamNumber(i,j) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n        /* \"Sprint1.sol\":9520:9555  pc_interface.getCellTeamNumber(i,j) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"Sprint1.sol\":9520:9555  pc_interface.getCellTeamNumber(i,j) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":9506:9555  currentTeam = pc_interface.getCellTeamNumber(i,j) */\n      swap5\n      pop\n        /* \"Sprint1.sol\":9596:9607  currentTeam */\n      dup5\n        /* \"Sprint1.sol\":9578:9586  teamsArr */\n      dup5\n        /* \"Sprint1.sol\":9587:9592  index */\n      dup5\n        /* \"Sprint1.sol\":9578:9593  teamsArr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Sprint1.sol\":9578:9607  teamsArr[index] = currentTeam */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Sprint1.sol\":9479:9482  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":9428:9626  for(int256 j = 0; j < pc_interface.getYdimension();j++){\r... */\n      jump(tag_70)\n    tag_71:\n      pop\n        /* \"Sprint1.sol\":9406:9409  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":9355:9639  for(int256 i = 0; i < pc_interface.getXdimension();i++){\r... */\n      jump(tag_64)\n    tag_65:\n      pop\n        /* \"Sprint1.sol\":9658:9666  teamsArr */\n      dup2\n        /* \"Sprint1.sol\":9651:9666  return teamsArr */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":9088:9675  function showCellOwners() public view returns(int256[] memory){\r... */\n      swap1\n      jump\t// out\n        /* \"Sprint1.sol\":7978:9038  function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n    tag_31:\n        /* \"Sprint1.sol\":8055:8062  uint256 */\n      0x00\n        /* \"Sprint1.sol\":8063:8070  bytes32 */\n      dup1\n        /* \"Sprint1.sol\":8071:8078  bytes32 */\n      0x00\n        /* \"Sprint1.sol\":8079:8086  bytes32 */\n      dup1\n        /* \"Sprint1.sol\":8087:8094  uint256 */\n      0x00\n        /* \"Sprint1.sol\":8108:8143  PowerContractInterface pc_interface */\n      dup1\n        /* \"Sprint1.sol\":8169:8188  powerContractAddres */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":8108:8189  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8202:8215  int256 teamNo */\n      0x00\n        /* \"Sprint1.sol\":8218:8230  pc_interface */\n      dup2\n        /* \"Sprint1.sol\":8218:8246  pc_interface.getMyTeamNumber */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb2de2d40\n        /* \"Sprint1.sol\":8218:8248  pc_interface.getMyTeamNumber() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n        /* \"Sprint1.sol\":8218:8248  pc_interface.getMyTeamNumber() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"Sprint1.sol\":8218:8248  pc_interface.getMyTeamNumber() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"Sprint1.sol\":8218:8248  pc_interface.getMyTeamNumber() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":8202:8248  int256 teamNo = pc_interface.getMyTeamNumber() */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8261:8283  bytes32 bytes32_TeamNo */\n      0x00\n        /* \"Sprint1.sol\":8294:8300  teamNo */\n      dup2\n        /* \"Sprint1.sol\":8286:8301  bytes32(teamNo) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":8261:8301  bytes32 bytes32_TeamNo = bytes32(teamNo) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8316:8333  bytes32  cellHash */\n      0x00\n        /* \"Sprint1.sol\":8336:8348  pc_interface */\n      dup4\n        /* \"Sprint1.sol\":8336:8360  pc_interface.getCellHash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x35d45c1d\n        /* \"Sprint1.sol\":8361:8362  x */\n      dup14\n        /* \"Sprint1.sol\":8363:8364  y */\n      dup14\n        /* \"Sprint1.sol\":8336:8365  pc_interface.getCellHash(x,y) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_84:\n        /* \"Sprint1.sol\":8336:8365  pc_interface.getCellHash(x,y) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_85:\n        /* \"Sprint1.sol\":8336:8365  pc_interface.getCellHash(x,y) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n        /* \"Sprint1.sol\":8336:8365  pc_interface.getCellHash(x,y) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":8316:8365  bytes32  cellHash = pc_interface.getCellHash(x,y) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8378:8390  uint256  pow */\n      0x00\n        /* \"Sprint1.sol\":8401:8413  pc_interface */\n      dup5\n        /* \"Sprint1.sol\":8401:8426  pc_interface.getCellPower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe4db6446\n        /* \"Sprint1.sol\":8427:8428  x */\n      dup15\n        /* \"Sprint1.sol\":8429:8430  y */\n      dup15\n        /* \"Sprint1.sol\":8401:8431  pc_interface.getCellPower(x,y) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n        /* \"Sprint1.sol\":8401:8431  pc_interface.getCellPower(x,y) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"Sprint1.sol\":8401:8431  pc_interface.getCellPower(x,y) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_89:\n        /* \"Sprint1.sol\":8401:8431  pc_interface.getCellPower(x,y) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":8378:8432  uint256  pow = uint256(pc_interface.getCellPower(x,y)) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8445:8456  uint  nonce */\n      0x00\n        /* \"Sprint1.sol\":8459:8460  1 */\n      0x01\n        /* \"Sprint1.sol\":8445:8460  uint  nonce = 1 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8476:8491  uint256 counter */\n      0x00\n        /* \"Sprint1.sol\":8494:8495  0 */\n      dup1\n        /* \"Sprint1.sol\":8476:8495  uint256 counter = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8508:8525  bytes32 finalHash */\n      0x00\n        /* \"Sprint1.sol\":8538:8560  uint256 multiplication */\n      dup1\n        /* \"Sprint1.sol\":8594:8926  while(counter < limit){\r... */\n    tag_90:\n        /* \"Sprint1.sol\":8610:8615  limit */\n      dup15\n        /* \"Sprint1.sol\":8600:8607  counter */\n      dup4\n        /* \"Sprint1.sol\":8600:8615  counter < limit */\n      lt\n        /* \"Sprint1.sol\":8594:8926  while(counter < limit){\r... */\n      iszero\n      tag_91\n      jumpi\n        /* \"Sprint1.sol\":8641:8696  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      0x02\n        /* \"Sprint1.sol\":8665:8673  cellHash */\n      dup7\n        /* \"Sprint1.sol\":8674:8688  bytes32_TeamNo */\n      dup9\n        /* \"Sprint1.sol\":8689:8694  nonce */\n      dup7\n        /* \"Sprint1.sol\":8648:8695  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sprint1.sol\":8648:8695  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Sprint1.sol\":8641:8696  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_92:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_92)\n    tag_94:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":8641:8696  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"Sprint1.sol\":8641:8696  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_96:\n        /* \"Sprint1.sol\":8641:8696  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":8629:8696  finalHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      swap2\n      pop\n        /* \"Sprint1.sol\":8746:8749  pow */\n      dup5\n        /* \"Sprint1.sol\":8743:8744  2 */\n      0x02\n        /* \"Sprint1.sol\":8743:8749  2**pow */\n      exp\n        /* \"Sprint1.sol\":8731:8740  finalHash */\n      dup3\n        /* \"Sprint1.sol\":8726:8741  uint(finalHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":8726:8750  uint(finalHash)*(2**pow) */\n      mul\n        /* \"Sprint1.sol\":8709:8750  multiplication = uint(finalHash)*(2**pow) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":8783:8797  multiplication */\n      dup1\n        /* \"Sprint1.sol\":8775:8798  bytes32(multiplication) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":8763:8798  finalHash = bytes32(multiplication) */\n      swap2\n      pop\n        /* \"Sprint1.sol\":8811:8818  nonce++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n      pop\n        /* \"Sprint1.sol\":8843:8852  finalHash */\n      dup2\n        /* \"Sprint1.sol\":8834:8842  cellHash */\n      dup7\n        /* \"Sprint1.sol\":8834:8852  cellHash<finalHash */\n      lt\n        /* \"Sprint1.sol\":8831:8899  if(cellHash<finalHash){\r... */\n      iszero\n      tag_97\n      jumpi\n        /* \"Sprint1.sol\":8871:8880  counter++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n      pop\n        /* \"Sprint1.sol\":8831:8899  if(cellHash<finalHash){\r... */\n    tag_97:\n        /* \"Sprint1.sol\":8594:8926  while(counter < limit){\r... */\n      jump(tag_90)\n    tag_91:\n        /* \"Sprint1.sol\":8938:8945  nonce-- */\n      dup4\n      dup1\n      0x01\n      swap1\n      sub\n      swap5\n      pop\n      pop\n        /* \"Sprint1.sol\":8977:8982  nonce */\n      dup4\n        /* \"Sprint1.sol\":8991:8996  nonce */\n      dup5\n        /* \"Sprint1.sol\":8983:8997  bytes32(nonce) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":8998:9006  cellHash */\n      dup8\n        /* \"Sprint1.sol\":9007:9016  finalHash */\n      dup5\n        /* \"Sprint1.sol\":9017:9020  pow */\n      dup9\n        /* \"Sprint1.sol\":8969:9021  return (nonce,bytes32(nonce),cellHash,finalHash,pow) */\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":7978:9038  function findPowerfullNonce(int x , int y,uint256 limit) public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      swap4\n      swap8\n      swap3\n      swap7\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump\t// out\n        /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\n    tag_34:\n        /* \"Sprint1.sol\":1645:1652  address */\n      0x00\n        /* \"Sprint1.sol\":1678:1713  PowerContractInterface pc_interface */\n      dup1\n        /* \"Sprint1.sol\":1739:1758  powerContractAddres */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":1678:1759  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":1772:1784  pc_interface */\n      dup1\n        /* \"Sprint1.sol\":1772:1802  pc_interface.setMyTeamContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2a9c1512\n        /* \"Sprint1.sol\":1803:1813  msg.sender */\n      caller\n        /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_99:\n        /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_100:\n        /* \"Sprint1.sol\":1772:1814  pc_interface.setMyTeamContract(msg.sender) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":1828:1847  address teamAddress */\n      0x00\n        /* \"Sprint1.sol\":1850:1862  pc_interface */\n      dup2\n        /* \"Sprint1.sol\":1850:1880  pc_interface.getMyTeamContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e94a6a4\n        /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n        /* \"Sprint1.sol\":1850:1882  pc_interface.getMyTeamContract() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":1828:1882  address teamAddress = pc_interface.getMyTeamContract() */\n      swap1\n      pop\n        /* \"Sprint1.sol\":1902:1913  teamAddress */\n      dup1\n        /* \"Sprint1.sol\":1895:1913  return teamAddress */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":1603:1922  function arrangeContract() public returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"Sprint1.sol\":2250:3506  function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n    tag_38:\n        /* \"Sprint1.sol\":2301:2308  uint256 */\n      0x00\n        /* \"Sprint1.sol\":2309:2316  bytes32 */\n      dup1\n        /* \"Sprint1.sol\":2317:2324  bytes32 */\n      0x00\n        /* \"Sprint1.sol\":2325:2332  bytes32 */\n      dup1\n        /* \"Sprint1.sol\":2333:2340  uint256 */\n      0x00\n        /* \"Sprint1.sol\":2356:2391  PowerContractInterface pc_interface */\n      dup1\n        /* \"Sprint1.sol\":2417:2436  powerContractAddres */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":2356:2437  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2450:2463  int256 teamNo */\n      0x00\n        /* \"Sprint1.sol\":2466:2478  pc_interface */\n      dup2\n        /* \"Sprint1.sol\":2466:2494  pc_interface.getMyTeamNumber */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb2de2d40\n        /* \"Sprint1.sol\":2466:2496  pc_interface.getMyTeamNumber() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_105:\n        /* \"Sprint1.sol\":2466:2496  pc_interface.getMyTeamNumber() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_106:\n        /* \"Sprint1.sol\":2466:2496  pc_interface.getMyTeamNumber() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"Sprint1.sol\":2466:2496  pc_interface.getMyTeamNumber() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2450:2496  int256 teamNo = pc_interface.getMyTeamNumber() */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2509:2531  bytes32 bytes32_TeamNo */\n      0x00\n        /* \"Sprint1.sol\":2542:2548  teamNo */\n      dup2\n        /* \"Sprint1.sol\":2534:2549  bytes32(teamNo) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":2509:2549  bytes32 bytes32_TeamNo = bytes32(teamNo) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2564:2581  bytes32  cellHash */\n      0x00\n        /* \"Sprint1.sol\":2584:2596  pc_interface */\n      dup4\n        /* \"Sprint1.sol\":2584:2608  pc_interface.getCellHash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x35d45c1d\n        /* \"Sprint1.sol\":2609:2610  x */\n      dup13\n        /* \"Sprint1.sol\":2611:2612  y */\n      dup13\n        /* \"Sprint1.sol\":2584:2613  pc_interface.getCellHash(x,y) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n        /* \"Sprint1.sol\":2584:2613  pc_interface.getCellHash(x,y) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"Sprint1.sol\":2584:2613  pc_interface.getCellHash(x,y) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_110:\n        /* \"Sprint1.sol\":2584:2613  pc_interface.getCellHash(x,y) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2564:2613  bytes32  cellHash = pc_interface.getCellHash(x,y) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2626:2638  uint256  pow */\n      0x00\n        /* \"Sprint1.sol\":2649:2661  pc_interface */\n      dup5\n        /* \"Sprint1.sol\":2649:2674  pc_interface.getCellPower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe4db6446\n        /* \"Sprint1.sol\":2675:2676  x */\n      dup14\n        /* \"Sprint1.sol\":2677:2678  y */\n      dup14\n        /* \"Sprint1.sol\":2649:2679  pc_interface.getCellPower(x,y) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n        /* \"Sprint1.sol\":2649:2679  pc_interface.getCellPower(x,y) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_112:\n        /* \"Sprint1.sol\":2649:2679  pc_interface.getCellPower(x,y) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"Sprint1.sol\":2649:2679  pc_interface.getCellPower(x,y) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2626:2680  uint256  pow = uint256(pc_interface.getCellPower(x,y)) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2693:2704  uint  nonce */\n      0x00\n        /* \"Sprint1.sol\":2707:2708  1 */\n      0x01\n        /* \"Sprint1.sol\":2693:2708  uint  nonce = 1 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2722:2738  bytes32  newHash */\n      0x00\n        /* \"Sprint1.sol\":2741:2796  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      0x02\n        /* \"Sprint1.sol\":2765:2773  cellHash */\n      dup5\n        /* \"Sprint1.sol\":2774:2788  bytes32_TeamNo */\n      dup7\n        /* \"Sprint1.sol\":2789:2794  nonce */\n      dup5\n        /* \"Sprint1.sol\":2748:2795  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sprint1.sol\":2748:2795  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Sprint1.sol\":2741:2796  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_114:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_114)\n    tag_116:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2741:2796  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_117:\n        /* \"Sprint1.sol\":2741:2796  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"Sprint1.sol\":2741:2796  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2722:2796  bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2811:2831  uint  multiplication */\n      0x00\n        /* \"Sprint1.sol\":2852:2855  pow */\n      dup4\n        /* \"Sprint1.sol\":2849:2850  2 */\n      0x02\n        /* \"Sprint1.sol\":2849:2855  2**pow */\n      exp\n        /* \"Sprint1.sol\":2839:2846  newHash */\n      dup3\n        /* \"Sprint1.sol\":2834:2847  uint(newHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":2834:2856  uint(newHash)*(2**pow) */\n      mul\n        /* \"Sprint1.sol\":2811:2856  uint  multiplication = uint(newHash)*(2**pow) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2869:2887  bytes32  finalHash */\n      0x00\n        /* \"Sprint1.sol\":2898:2912  multiplication */\n      dup2\n        /* \"Sprint1.sol\":2890:2913  bytes32(multiplication) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":2869:2913  bytes32  finalHash = bytes32(multiplication) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":2944:2953  finalHash */\n      dup1\n        /* \"Sprint1.sol\":2933:2941  cellHash */\n      dup7\n        /* \"Sprint1.sol\":2933:2953  cellHash > finalHash */\n      gt\n        /* \"Sprint1.sol\":2930:3411  if(cellHash > finalHash){\r... */\n      iszero\n      tag_119\n      jumpi\n        /* \"Sprint1.sol\":2972:3247  while(cellHash > finalHash){\r... */\n    tag_120:\n        /* \"Sprint1.sol\":2989:2998  finalHash */\n      dup1\n        /* \"Sprint1.sol\":2978:2986  cellHash */\n      dup7\n        /* \"Sprint1.sol\":2978:2998  cellHash > finalHash */\n      gt\n        /* \"Sprint1.sol\":2972:3247  while(cellHash > finalHash){\r... */\n      iszero\n      tag_121\n      jumpi\n        /* \"Sprint1.sol\":3029:3084  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      0x02\n        /* \"Sprint1.sol\":3053:3061  cellHash */\n      dup7\n        /* \"Sprint1.sol\":3062:3076  bytes32_TeamNo */\n      dup9\n        /* \"Sprint1.sol\":3077:3082  nonce */\n      dup7\n        /* \"Sprint1.sol\":3036:3083  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sprint1.sol\":3036:3083  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Sprint1.sol\":3029:3084  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_122:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_122)\n    tag_124:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":3029:3084  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_125:\n        /* \"Sprint1.sol\":3029:3084  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_126:\n        /* \"Sprint1.sol\":3029:3084  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":3017:3084  finalHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3139:3142  pow */\n      dup5\n        /* \"Sprint1.sol\":3136:3137  2 */\n      0x02\n        /* \"Sprint1.sol\":3136:3142  2**pow */\n      exp\n        /* \"Sprint1.sol\":3124:3133  finalHash */\n      dup2\n        /* \"Sprint1.sol\":3119:3134  uint(finalHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":3119:3143  uint(finalHash)*(2**pow) */\n      mul\n        /* \"Sprint1.sol\":3102:3143  multiplication = uint(finalHash)*(2**pow) */\n      swap2\n      pop\n        /* \"Sprint1.sol\":3181:3195  multiplication */\n      dup2\n        /* \"Sprint1.sol\":3173:3196  bytes32(multiplication) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":3161:3196  finalHash = bytes32(multiplication) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3216:3223  nonce++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n      pop\n        /* \"Sprint1.sol\":2972:3247  while(cellHash > finalHash){\r... */\n      jump(tag_120)\n    tag_121:\n        /* \"Sprint1.sol\":3385:3392  nonce-- */\n      dup4\n      dup1\n      0x01\n      swap1\n      sub\n      swap5\n      pop\n      pop\n        /* \"Sprint1.sol\":2930:3411  if(cellHash > finalHash){\r... */\n    tag_119:\n        /* \"Sprint1.sol\":3448:3453  nonce */\n      dup4\n        /* \"Sprint1.sol\":3462:3467  nonce */\n      dup5\n        /* \"Sprint1.sol\":3454:3468  bytes32(nonce) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":3469:3477  cellHash */\n      dup8\n        /* \"Sprint1.sol\":3478:3487  finalHash */\n      dup4\n        /* \"Sprint1.sol\":3488:3491  pow */\n      dup9\n        /* \"Sprint1.sol\":3440:3492  return (nonce,bytes32(nonce),cellHash,finalHash,pow) */\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      swap14\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":2250:3506  function findNonce(int x,int y)public view returns(uint256,bytes32,bytes32,bytes32,uint256){\r... */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"Sprint1.sol\":6413:7090  function captureColumn(int column,uint mode , uint limit) payable public{\r... */\n    tag_41:\n        /* \"Sprint1.sol\":6514:6515  1 */\n      0x01\n        /* \"Sprint1.sol\":6506:6510  mode */\n      dup3\n        /* \"Sprint1.sol\":6506:6515  mode == 1 */\n      eq\n        /* \"Sprint1.sol\":6506:6528  mode == 1 || mode == 0 */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"Sprint1.sol\":6527:6528  0 */\n      0x00\n        /* \"Sprint1.sol\":6519:6523  mode */\n      dup3\n        /* \"Sprint1.sol\":6519:6528  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":6506:6528  mode == 1 || mode == 0 */\n    tag_128:\n        /* \"Sprint1.sol\":6498:6544  require(mode == 1 || mode == 0,\"Invalid Mode\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"Sprint1.sol\":6559:6594  PowerContractInterface pc_interface */\n      0x00\n        /* \"Sprint1.sol\":6620:6639  powerContractAddres */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":6559:6640  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":6653:6666  bytes32 nonce */\n      0x00\n        /* \"Sprint1.sol\":6683:6691  int256 i */\n      dup1\n        /* \"Sprint1.sol\":6694:6695  0 */\n      0x00\n        /* \"Sprint1.sol\":6683:6695  int256 i = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":6679:7082  for(int256 i = 0 ; i < pc_interface.getYdimension(); i++){\r... */\n    tag_130:\n        /* \"Sprint1.sol\":6702:6714  pc_interface */\n      dup3\n        /* \"Sprint1.sol\":6702:6728  pc_interface.getYdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfafe7005\n        /* \"Sprint1.sol\":6702:6730  pc_interface.getYdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_133:\n        /* \"Sprint1.sol\":6702:6730  pc_interface.getYdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"Sprint1.sol\":6702:6730  pc_interface.getYdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_135:\n        /* \"Sprint1.sol\":6702:6730  pc_interface.getYdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":6698:6699  i */\n      dup2\n        /* \"Sprint1.sol\":6698:6730  i < pc_interface.getYdimension() */\n      slt\n        /* \"Sprint1.sol\":6679:7082  for(int256 i = 0 ; i < pc_interface.getYdimension(); i++){\r... */\n      iszero\n      tag_131\n      jumpi\n        /* \"Sprint1.sol\":6789:6790  0 */\n      0x00\n        /* \"Sprint1.sol\":6781:6785  mode */\n      dup6\n        /* \"Sprint1.sol\":6781:6790  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":6778:6978  if(mode == 0) {\r... */\n      iszero\n      tag_136\n      jumpi\n        /* \"Sprint1.sol\":6829:6848  findNonce(i,column) */\n      tag_137\n        /* \"Sprint1.sol\":6839:6840  i */\n      dup2\n        /* \"Sprint1.sol\":6841:6847  column */\n      dup8\n        /* \"Sprint1.sol\":6829:6838  findNonce */\n      tag_38\n        /* \"Sprint1.sol\":6829:6848  findNonce(i,column) */\n      jump\t// in\n    tag_137:\n        /* \"Sprint1.sol\":6815:6848  (,nonce,,,) = findNonce(i,column) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"Sprint1.sol\":6778:6978  if(mode == 0) {\r... */\n      jump(tag_138)\n    tag_136:\n        /* \"Sprint1.sol\":6925:6959  findPowerfullNonce(i,column,limit) */\n      tag_139\n        /* \"Sprint1.sol\":6944:6945  i */\n      dup2\n        /* \"Sprint1.sol\":6946:6952  column */\n      dup8\n        /* \"Sprint1.sol\":6953:6958  limit */\n      dup7\n        /* \"Sprint1.sol\":6925:6943  findPowerfullNonce */\n      tag_31\n        /* \"Sprint1.sol\":6925:6959  findPowerfullNonce(i,column,limit) */\n      jump\t// in\n    tag_139:\n        /* \"Sprint1.sol\":6911:6959  (,nonce,,,) = findPowerfullNonce(i,column,limit) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"Sprint1.sol\":6778:6978  if(mode == 0) {\r... */\n    tag_138:\n        /* \"Sprint1.sol\":7000:7012  pc_interface */\n      dup3\n        /* \"Sprint1.sol\":7000:7033  pc_interface.setCellsFromContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f8e0b48\n        /* \"Sprint1.sol\":7040:7049  0.1 ether */\n      0x016345785d8a0000\n        /* \"Sprint1.sol\":7051:7052  i */\n      dup4\n        /* \"Sprint1.sol\":7053:7059  column */\n      dup10\n        /* \"Sprint1.sol\":7060:7065  nonce */\n      dup7\n        /* \"Sprint1.sol\":7000:7066  pc_interface.setCellsFromContract.value(0.1 ether)(i,column,nonce) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_140:\n        /* \"Sprint1.sol\":7000:7066  pc_interface.setCellsFromContract.value(0.1 ether)(i,column,nonce) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_141\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_141:\n        /* \"Sprint1.sol\":7000:7066  pc_interface.setCellsFromContract.value(0.1 ether)(i,column,nonce) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_142\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_142:\n        /* \"Sprint1.sol\":7000:7066  pc_interface.setCellsFromContract.value(0.1 ether)(i,column,nonce) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":6732:6735  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":6679:7082  for(int256 i = 0 ; i < pc_interface.getYdimension(); i++){\r... */\n      jump(tag_130)\n    tag_131:\n      pop\n        /* \"Sprint1.sol\":6413:7090  function captureColumn(int column,uint mode , uint limit) payable public{\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Sprint1.sol\":7143:7880  function captureSquare(int startPointX , int startPointY,int sideLength) payable public{\r... */\n    tag_44:\n        /* \"Sprint1.sol\":7245:7280  PowerContractInterface pc_interface */\n      0x00\n        /* \"Sprint1.sol\":7306:7325  powerContractAddres */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":7245:7326  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":7388:7400  pc_interface */\n      dup1\n        /* \"Sprint1.sol\":7388:7414  pc_interface.getXdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x26c19e40\n        /* \"Sprint1.sol\":7388:7416  pc_interface.getXdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_144\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_144:\n        /* \"Sprint1.sol\":7388:7416  pc_interface.getXdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_145:\n        /* \"Sprint1.sol\":7388:7416  pc_interface.getXdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_146:\n        /* \"Sprint1.sol\":7388:7416  pc_interface.getXdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":7374:7384  sideLength */\n      dup3\n        /* \"Sprint1.sol\":7362:7373  startPointX */\n      dup6\n        /* \"Sprint1.sol\":7362:7384  startPointX+sideLength */\n      add\n        /* \"Sprint1.sol\":7361:7416  (startPointX+sideLength) < pc_interface.getXdimension() */\n      slt\n        /* \"Sprint1.sol\":7361:7475  (startPointX+sideLength) < pc_interface.getXdimension() || (startPointY+sideLength) < pc_interface.getYdimension() */\n      dup1\n      tag_147\n      jumpi\n      pop\n        /* \"Sprint1.sol\":7447:7459  pc_interface */\n      dup1\n        /* \"Sprint1.sol\":7447:7473  pc_interface.getYdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfafe7005\n        /* \"Sprint1.sol\":7447:7475  pc_interface.getYdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_148:\n        /* \"Sprint1.sol\":7447:7475  pc_interface.getYdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_149:\n        /* \"Sprint1.sol\":7447:7475  pc_interface.getYdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_150:\n        /* \"Sprint1.sol\":7447:7475  pc_interface.getYdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":7433:7443  sideLength */\n      dup3\n        /* \"Sprint1.sol\":7421:7432  startPointY */\n      dup5\n        /* \"Sprint1.sol\":7421:7443  startPointY+sideLength */\n      add\n        /* \"Sprint1.sol\":7420:7475  (startPointY+sideLength) < pc_interface.getYdimension() */\n      slt\n        /* \"Sprint1.sol\":7361:7475  (startPointX+sideLength) < pc_interface.getXdimension() || (startPointY+sideLength) < pc_interface.getYdimension() */\n    tag_147:\n        /* \"Sprint1.sol\":7341:7526  require(\r... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x537175617265206973206f7574206f662072616e67652e000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Sprint1.sol\":7541:7554  bytes32 nonce */\n      0x00\n        /* \"Sprint1.sol\":7571:7576  int i */\n      dup1\n        /* \"Sprint1.sol\":7579:7590  startPointX */\n      dup6\n        /* \"Sprint1.sol\":7571:7590  int i = startPointX */\n      swap1\n      pop\n        /* \"Sprint1.sol\":7567:7872  for(int i = startPointX; i < (startPointX+sideLength) ; i++){\r... */\n    tag_152:\n        /* \"Sprint1.sol\":7609:7619  sideLength */\n      dup4\n        /* \"Sprint1.sol\":7597:7608  startPointX */\n      dup7\n        /* \"Sprint1.sol\":7597:7619  startPointX+sideLength */\n      add\n        /* \"Sprint1.sol\":7592:7593  i */\n      dup2\n        /* \"Sprint1.sol\":7592:7620  i < (startPointX+sideLength) */\n      slt\n        /* \"Sprint1.sol\":7567:7872  for(int i = startPointX; i < (startPointX+sideLength) ; i++){\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"Sprint1.sol\":7649:7654  int j */\n      0x00\n        /* \"Sprint1.sol\":7657:7668  startPointY */\n      dup6\n        /* \"Sprint1.sol\":7649:7668  int j = startPointY */\n      swap1\n      pop\n        /* \"Sprint1.sol\":7645:7859  for(int j = startPointY; j < (startPointY+sideLength) ; j++){\r... */\n    tag_155:\n        /* \"Sprint1.sol\":7687:7697  sideLength */\n      dup5\n        /* \"Sprint1.sol\":7675:7686  startPointY */\n      dup7\n        /* \"Sprint1.sol\":7675:7697  startPointY+sideLength */\n      add\n        /* \"Sprint1.sol\":7670:7671  j */\n      dup2\n        /* \"Sprint1.sol\":7670:7698  j < (startPointY+sideLength) */\n      slt\n        /* \"Sprint1.sol\":7645:7859  for(int j = startPointY; j < (startPointY+sideLength) ; j++){\r... */\n      iszero\n      tag_156\n      jumpi\n        /* \"Sprint1.sol\":7742:7756  findNonce(i,j) */\n      tag_158\n        /* \"Sprint1.sol\":7752:7753  i */\n      dup3\n        /* \"Sprint1.sol\":7754:7755  j */\n      dup3\n        /* \"Sprint1.sol\":7742:7751  findNonce */\n      tag_38\n        /* \"Sprint1.sol\":7742:7756  findNonce(i,j) */\n      jump\t// in\n    tag_158:\n        /* \"Sprint1.sol\":7728:7756  (,nonce,,,) = findNonce(i,j) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap4\n      pop\n      pop\n        /* \"Sprint1.sol\":7779:7791  pc_interface */\n      dup4\n        /* \"Sprint1.sol\":7779:7812  pc_interface.setCellsFromContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f8e0b48\n        /* \"Sprint1.sol\":7819:7828  0.1 ether */\n      0x016345785d8a0000\n        /* \"Sprint1.sol\":7830:7831  i */\n      dup5\n        /* \"Sprint1.sol\":7832:7833  j */\n      dup5\n        /* \"Sprint1.sol\":7834:7839  nonce */\n      dup8\n        /* \"Sprint1.sol\":7779:7840  pc_interface.setCellsFromContract.value(0.1 ether)(i,j,nonce) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_159\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_159:\n        /* \"Sprint1.sol\":7779:7840  pc_interface.setCellsFromContract.value(0.1 ether)(i,j,nonce) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_160:\n        /* \"Sprint1.sol\":7779:7840  pc_interface.setCellsFromContract.value(0.1 ether)(i,j,nonce) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_161\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_161:\n        /* \"Sprint1.sol\":7779:7840  pc_interface.setCellsFromContract.value(0.1 ether)(i,j,nonce) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":7701:7704  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":7645:7859  for(int j = startPointY; j < (startPointY+sideLength) ; j++){\r... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"Sprint1.sol\":7623:7626  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":7567:7872  for(int i = startPointX; i < (startPointX+sideLength) ; i++){\r... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"Sprint1.sol\":7143:7880  function captureSquare(int startPointX , int startPointY,int sideLength) payable public{\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Sprint1.sol\":5744:6404  function captureRow(int row,uint mode,uint limit) payable public{\r... */\n    tag_47:\n        /* \"Sprint1.sol\":5837:5838  1 */\n      0x01\n        /* \"Sprint1.sol\":5829:5833  mode */\n      dup3\n        /* \"Sprint1.sol\":5829:5838  mode == 1 */\n      eq\n        /* \"Sprint1.sol\":5829:5851  mode == 1 || mode == 0 */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"Sprint1.sol\":5850:5851  0 */\n      0x00\n        /* \"Sprint1.sol\":5842:5846  mode */\n      dup3\n        /* \"Sprint1.sol\":5842:5851  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":5829:5851  mode == 1 || mode == 0 */\n    tag_163:\n        /* \"Sprint1.sol\":5821:5867  require(mode == 1 || mode == 0,\"Invalid Mode\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Sprint1.sol\":5882:5917  PowerContractInterface pc_interface */\n      0x00\n        /* \"Sprint1.sol\":5943:5962  powerContractAddres */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sprint1.sol\":5882:5963  PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":5976:5989  bytes32 nonce */\n      0x00\n        /* \"Sprint1.sol\":6006:6014  int256 i */\n      dup1\n        /* \"Sprint1.sol\":6017:6018  0 */\n      0x00\n        /* \"Sprint1.sol\":6006:6018  int256 i = 0 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":6002:6396  for(int256 i = 0 ; i < pc_interface.getXdimension(); i++){\r... */\n    tag_165:\n        /* \"Sprint1.sol\":6025:6037  pc_interface */\n      dup3\n        /* \"Sprint1.sol\":6025:6051  pc_interface.getXdimension */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x26c19e40\n        /* \"Sprint1.sol\":6025:6053  pc_interface.getXdimension() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_168:\n        /* \"Sprint1.sol\":6025:6053  pc_interface.getXdimension() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n        /* \"Sprint1.sol\":6025:6053  pc_interface.getXdimension() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_170:\n        /* \"Sprint1.sol\":6025:6053  pc_interface.getXdimension() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":6021:6022  i */\n      dup2\n        /* \"Sprint1.sol\":6021:6053  i < pc_interface.getXdimension() */\n      slt\n        /* \"Sprint1.sol\":6002:6396  for(int256 i = 0 ; i < pc_interface.getXdimension(); i++){\r... */\n      iszero\n      tag_166\n      jumpi\n        /* \"Sprint1.sol\":6112:6113  0 */\n      0x00\n        /* \"Sprint1.sol\":6104:6108  mode */\n      dup6\n        /* \"Sprint1.sol\":6104:6113  mode == 0 */\n      eq\n        /* \"Sprint1.sol\":6101:6295  if(mode == 0) {\r... */\n      iszero\n      tag_171\n      jumpi\n        /* \"Sprint1.sol\":6152:6168  findNonce(row,i) */\n      tag_172\n        /* \"Sprint1.sol\":6162:6165  row */\n      dup7\n        /* \"Sprint1.sol\":6166:6167  i */\n      dup3\n        /* \"Sprint1.sol\":6152:6161  findNonce */\n      tag_38\n        /* \"Sprint1.sol\":6152:6168  findNonce(row,i) */\n      jump\t// in\n    tag_172:\n        /* \"Sprint1.sol\":6138:6168  (,nonce,,,) = findNonce(row,i) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"Sprint1.sol\":6101:6295  if(mode == 0) {\r... */\n      jump(tag_173)\n    tag_171:\n        /* \"Sprint1.sol\":6245:6276  findPowerfullNonce(row,i,limit) */\n      tag_174\n        /* \"Sprint1.sol\":6264:6267  row */\n      dup7\n        /* \"Sprint1.sol\":6268:6269  i */\n      dup3\n        /* \"Sprint1.sol\":6270:6275  limit */\n      dup7\n        /* \"Sprint1.sol\":6245:6263  findPowerfullNonce */\n      tag_31\n        /* \"Sprint1.sol\":6245:6276  findPowerfullNonce(row,i,limit) */\n      jump\t// in\n    tag_174:\n        /* \"Sprint1.sol\":6231:6276  (,nonce,,,) = findPowerfullNonce(row,i,limit) */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"Sprint1.sol\":6101:6295  if(mode == 0) {\r... */\n    tag_173:\n        /* \"Sprint1.sol\":6317:6329  pc_interface */\n      dup3\n        /* \"Sprint1.sol\":6317:6350  pc_interface.setCellsFromContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f8e0b48\n        /* \"Sprint1.sol\":6357:6366  0.1 ether */\n      0x016345785d8a0000\n        /* \"Sprint1.sol\":6368:6371  row */\n      dup9\n        /* \"Sprint1.sol\":6372:6373  i */\n      dup5\n        /* \"Sprint1.sol\":6374:6379  nonce */\n      dup7\n        /* \"Sprint1.sol\":6317:6380  pc_interface.setCellsFromContract.value(0.1 ether)(row,i,nonce) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"Sprint1.sol\":6317:6380  pc_interface.setCellsFromContract.value(0.1 ether)(row,i,nonce) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"Sprint1.sol\":6317:6380  pc_interface.setCellsFromContract.value(0.1 ether)(row,i,nonce) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n        /* \"Sprint1.sol\":6317:6380  pc_interface.setCellsFromContract.value(0.1 ether)(row,i,nonce) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":6055:6058  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Sprint1.sol\":6002:6396  for(int256 i = 0 ; i < pc_interface.getXdimension(); i++){\r... */\n      jump(tag_165)\n    tag_166:\n      pop\n        /* \"Sprint1.sol\":5744:6404  function captureRow(int row,uint mode,uint limit) payable public{\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582053e50b725db85b8022e84f34925b013fec7abb83540f8a71773fbc281c8b915164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405273a7c40d644bdb571f98d72a08af2a1fb4ab4f24fe6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507306d99001c37c88f996f629698c822f19db68388d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100bb61010d60201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010757600080fd5b50610258565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16632a9c1512336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156101b357600080fd5b505af11580156101c7573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff16635e94a6a46040518163ffffffff1660e01b815260040160206040518083038186803b15801561021357600080fd5b505afa158015610227573d6000803e3d6000fd5b505050506040513d602081101561023d57600080fd5b81019080805190602001909291905050509050809250505090565b61187280620002686000396000f3fe6080604052600436106100915760003560e01c80636881e114116100595780636881e114146102635780637ba334ef146102ba578063cc49b72c1461032f578063df3e164a14610371578063f8263904146103b357610091565b8063045bbbb2146100965780630cd9a64d146100c15780630e7af8f7146101185780631b0d9294146101785780634f15f351146101e4575b600080fd5b3480156100a257600080fd5b506100ab6103f5565b6040518082815260200191505060405180910390f35b3480156100cd57600080fd5b506100d66104a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101626004803603608081101561012e57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506104cf565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d610685565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101d05780820151818401526020810190506101b5565b505050509050019250505060405180910390f35b3480156101f057600080fd5b506102316004803603606081101561020757600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506108a7565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34801561026f57600080fd5b50610278610bd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c657600080fd5b506102fd600480360360408110156102dd57600080fd5b810190808035906020019092919080359060200190929190505050610d20565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b61036f6004803603606081101561034557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611123565b005b6103b16004803603606081101561038757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611359565b005b6103f3600480360360608110156103c957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611607565b005b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b15801561046457600080fd5b505afa158015610478573d6000803e3d6000fd5b505050506040513d602081101561048e57600080fd5b81019080805190602001909291905050509050809250505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018314806104e05750600083145b610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964206d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006105848787610d20565b50505091505060008514156105b15761059d8787610d20565b9091929350909150905050809150506105cc565b6105bc8787866108a7565b9091929350909150905050809150505b60008273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008a8a866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b50505050506040513d602081101561066457600080fd5b81019080805190602001909291905050509050809350505050949350505050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006060600080905060008090505b8473ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d602081101561072c57600080fd5b810190808051906020019092919050505081121561089c5760008090505b8573ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d60208110156107ba57600080fd5b810190808051906020019092919050505081121561088e578573ffffffffffffffffffffffffffffffffffffffff1663912c216283836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561082b57600080fd5b505afa15801561083f573d6000803e3d6000fd5b505050506040513d602081101561085557600080fd5b810190808051906020019092919050505094508484848151811061087557fe5b602002602001018181525050808060010191505061074a565b5080806001019150506106bc565b508194505050505090565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d602081101561094657600080fd5b8101908080519060200190929190505050905060008160001b905060008373ffffffffffffffffffffffffffffffffffffffff166335d45c1d8d8d6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156109bc57600080fd5b505afa1580156109d0573d6000803e3d6000fd5b505050506040513d60208110156109e657600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663e4db64468e8e6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d6020811015610a7e57600080fd5b8101908080519060200190929190505050905060006001905060008090506000805b8e831015610ba65760028688866040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310610b0d5780518252602082019150602081019050602083039250610aea565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610b4f573d6000803e3d6000fd5b5050506040513d6020811015610b6457600080fd5b810190808051906020019092919050505091508460020a8260001c0290508060001b9150838060010194505081861015610ba15782806001019350505b610aa0565b838060019003945050838460001b8784889d509d509d509d509d50505050505050505050939792965093509350565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16632a9c1512336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610c7b57600080fd5b505af1158015610c8f573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff16635e94a6a46040518163ffffffff1660e01b815260040160206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d6020811015610d0557600080fd5b81019080805190602001909291905050509050809250505090565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9557600080fd5b505afa158015610da9573d6000803e3d6000fd5b505050506040513d6020811015610dbf57600080fd5b8101908080519060200190929190505050905060008160001b905060008373ffffffffffffffffffffffffffffffffffffffff166335d45c1d8c8c6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610e3557600080fd5b505afa158015610e49573d6000803e3d6000fd5b505050506040513d6020811015610e5f57600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663e4db64468d8d6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d6020811015610ef757600080fd5b81019080805190602001909291905050509050600060019050600060028486846040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310610f775780518252602082019150602081019050602083039250610f54565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610fb9573d6000803e3d6000fd5b5050506040513d6020811015610fce57600080fd5b8101908080519060200190929190505050905060008360020a8260001c02905060008160001b9050808611156110fe575b808611156110f45760028688866040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b6020831061106c5780518252602082019150602081019050602083039250611049565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156110ae573d6000803e3d6000fd5b5050506040513d60208110156110c357600080fd5b810190808051906020019092919050505090508460020a8160001c0291508160001b90508380600101945050610fff565b8380600190039450505b838460001b8783889d509d509d509d509d505050505050505050509295509295909350565b60018214806111325750600082145b6111a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964204d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561121857600080fd5b505afa15801561122c573d6000803e3d6000fd5b505050506040513d602081101561124257600080fd5b81019080805190602001909291905050508112156113515760008514156112815761126d8187610d20565b90919293509091509050508092505061129c565b61128c8187866108a7565b9091929350909150905050809250505b8273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008389866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b15801561130757600080fd5b505af115801561131b573d6000803e3d6000fd5b50505050506040513d602081101561133257600080fd5b81019080805190602001909291905050505080806001019150506111d2565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c557600080fd5b505afa1580156113d9573d6000803e3d6000fd5b505050506040513d60208110156113ef57600080fd5b8101908080519060200190929190505050828501128061149057508073ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561145057600080fd5b505afa158015611464573d6000803e3d6000fd5b505050506040513d602081101561147a57600080fd5b8101908080519060200190929190505050828401125b611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f537175617265206973206f7574206f662072616e67652e00000000000000000081525060200191505060405180910390fd5b6000808590505b8386018112156115ff5760008590505b8486018112156115f15761152d8282610d20565b9091929350909150905050809350508373ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008484876040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b1580156115a757600080fd5b505af11580156115bb573d6000803e3d6000fd5b50505050506040513d60208110156115d257600080fd5b8101908080519060200190929190505050508080600101915050611519565b508080600101915050611509565b505050505050565b60018214806116165750600082145b611688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964204d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b1580156116fc57600080fd5b505afa158015611710573d6000803e3d6000fd5b505050506040513d602081101561172657600080fd5b8101908080519060200190929190505050811215611835576000851415611765576117518682610d20565b909192935090915090505080925050611780565b6117708682866108a7565b9091929350909150905050809250505b8273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008884866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b50505050506040513d602081101561181657600080fd5b81019080805190602001909291905050505080806001019150506116b6565b50505050505056fea265627a7a7231582053e50b725db85b8022e84f34925b013fec7abb83540f8a71773fbc281c8b915164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA7C40D644BDB571F98D72A08AF2A1FB4AB4F24FE PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x6D99001C37C88F996F629698C822F19DB68388D PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xBB PUSH2 0x10D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A9C1512 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E94A6A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1872 DUP1 PUSH3 0x268 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6881E114 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x6881E114 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x7BA334EF EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xCC49B72C EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF3E164A EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xF8263904 EQ PUSH2 0x3B3 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x45BBBB2 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xCD9A64D EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE7AF8F7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1B0D9294 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4F15F351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1123 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1607 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 EQ DUP1 PUSH2 0x4E0 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964206D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x584 DUP8 DUP8 PUSH2 0xD20 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x59D DUP8 DUP8 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BC DUP8 DUP8 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP11 DUP11 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x88E JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x912C2162 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP5 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x74A JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6BC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x930 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35D45C1D DUP14 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4DB6446 DUP15 DUP15 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP15 DUP4 LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x2 DUP7 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB0D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP DUP5 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP DUP1 PUSH1 0x0 SHL SWAP2 POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP DUP2 DUP7 LT ISZERO PUSH2 0xBA1 JUMPI DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP DUP4 DUP5 PUSH1 0x0 SHL DUP8 DUP5 DUP9 SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A9C1512 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E94A6A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35D45C1D DUP13 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4DB6446 DUP14 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF77 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x10FE JUMPI JUMPDEST DUP1 DUP7 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x2 DUP7 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x106C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP5 PUSH1 0x2 EXP DUP2 PUSH1 0x0 SHR MUL SWAP2 POP DUP2 PUSH1 0x0 SHL SWAP1 POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST DUP4 DUP5 PUSH1 0x0 SHL DUP8 DUP4 DUP9 SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x1132 JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST PUSH2 0x11A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x1351 JUMPI PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1281 JUMPI PUSH2 0x126D DUP2 DUP8 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0x129C JUMP JUMPDEST PUSH2 0x128C DUP2 DUP8 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP4 DUP10 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11D2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 DUP6 ADD SLT DUP1 PUSH2 0x1490 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1464 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 DUP5 ADD SLT JUMPDEST PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x537175617265206973206F7574206F662072616E67652E000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 SWAP1 POP JUMPDEST DUP4 DUP7 ADD DUP2 SLT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP7 ADD DUP2 SLT ISZERO PUSH2 0x15F1 JUMPI PUSH2 0x152D DUP3 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP4 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1519 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1509 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x1616 JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST PUSH2 0x1688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1710 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x1835 JUMPI PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1751 DUP7 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1770 DUP7 DUP3 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16B6 JUMP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE8 0xE5 SIGNEXTEND PUSH19 0x5DB85B8022E84F34925B013FEC7ABB83540F8A PUSH18 0x773FBC281C8B915164736F6C634300051100 ORIGIN ",
							"sourceMap": "1418:8267:0:-;;;1478:42;1448:72;;;;;;;;;;;;;;;;;;;;1544:42;1528:58;;;;;;;;;;;;;;;;;;;;2209:17;:15;;;:17;;:::i;:::-;2181:45;;;;;;;;;;;;;;;;;;;;1418:8267;8:9:-1;5:2;;;30:1;27;20:12;5:2;1418:8267:0;;;1603:319;1645:7;1678:35;1739:19;;;;;;;;;;;1678:81;;1772:12;:30;;;1803:10;1772:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1772:42:0;;;;1828:19;1850:12;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1850:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1850:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1850:32:0;;;;;;;;;;;;;;;;1828:54;;1902:11;1895:18;;;;1603:319;:::o;1418:8267::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100915760003560e01c80636881e114116100595780636881e114146102635780637ba334ef146102ba578063cc49b72c1461032f578063df3e164a14610371578063f8263904146103b357610091565b8063045bbbb2146100965780630cd9a64d146100c15780630e7af8f7146101185780631b0d9294146101785780634f15f351146101e4575b600080fd5b3480156100a257600080fd5b506100ab6103f5565b6040518082815260200191505060405180910390f35b3480156100cd57600080fd5b506100d66104a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101626004803603608081101561012e57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506104cf565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d610685565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101d05780820151818401526020810190506101b5565b505050509050019250505060405180910390f35b3480156101f057600080fd5b506102316004803603606081101561020757600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506108a7565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34801561026f57600080fd5b50610278610bd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c657600080fd5b506102fd600480360360408110156102dd57600080fd5b810190808035906020019092919080359060200190929190505050610d20565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b61036f6004803603606081101561034557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611123565b005b6103b16004803603606081101561038757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611359565b005b6103f3600480360360608110156103c957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611607565b005b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b15801561046457600080fd5b505afa158015610478573d6000803e3d6000fd5b505050506040513d602081101561048e57600080fd5b81019080805190602001909291905050509050809250505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018314806104e05750600083145b610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964206d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006105848787610d20565b50505091505060008514156105b15761059d8787610d20565b9091929350909150905050809150506105cc565b6105bc8787866108a7565b9091929350909150905050809150505b60008273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008a8a866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b50505050506040513d602081101561066457600080fd5b81019080805190602001909291905050509050809350505050949350505050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006060600080905060008090505b8473ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d602081101561072c57600080fd5b810190808051906020019092919050505081121561089c5760008090505b8573ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d60208110156107ba57600080fd5b810190808051906020019092919050505081121561088e578573ffffffffffffffffffffffffffffffffffffffff1663912c216283836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561082b57600080fd5b505afa15801561083f573d6000803e3d6000fd5b505050506040513d602081101561085557600080fd5b810190808051906020019092919050505094508484848151811061087557fe5b602002602001018181525050808060010191505061074a565b5080806001019150506106bc565b508194505050505090565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d602081101561094657600080fd5b8101908080519060200190929190505050905060008160001b905060008373ffffffffffffffffffffffffffffffffffffffff166335d45c1d8d8d6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156109bc57600080fd5b505afa1580156109d0573d6000803e3d6000fd5b505050506040513d60208110156109e657600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663e4db64468e8e6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d6020811015610a7e57600080fd5b8101908080519060200190929190505050905060006001905060008090506000805b8e831015610ba65760028688866040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310610b0d5780518252602082019150602081019050602083039250610aea565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610b4f573d6000803e3d6000fd5b5050506040513d6020811015610b6457600080fd5b810190808051906020019092919050505091508460020a8260001c0290508060001b9150838060010194505081861015610ba15782806001019350505b610aa0565b838060019003945050838460001b8784889d509d509d509d509d50505050505050505050939792965093509350565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16632a9c1512336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610c7b57600080fd5b505af1158015610c8f573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff16635e94a6a46040518163ffffffff1660e01b815260040160206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d6020811015610d0557600080fd5b81019080805190602001909291905050509050809250505090565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663b2de2d406040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9557600080fd5b505afa158015610da9573d6000803e3d6000fd5b505050506040513d6020811015610dbf57600080fd5b8101908080519060200190929190505050905060008160001b905060008373ffffffffffffffffffffffffffffffffffffffff166335d45c1d8c8c6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610e3557600080fd5b505afa158015610e49573d6000803e3d6000fd5b505050506040513d6020811015610e5f57600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663e4db64468d8d6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d6020811015610ef757600080fd5b81019080805190602001909291905050509050600060019050600060028486846040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310610f775780518252602082019150602081019050602083039250610f54565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610fb9573d6000803e3d6000fd5b5050506040513d6020811015610fce57600080fd5b8101908080519060200190929190505050905060008360020a8260001c02905060008160001b9050808611156110fe575b808611156110f45760028688866040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b6020831061106c5780518252602082019150602081019050602083039250611049565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156110ae573d6000803e3d6000fd5b5050506040513d60208110156110c357600080fd5b810190808051906020019092919050505090508460020a8160001c0291508160001b90508380600101945050610fff565b8380600190039450505b838460001b8783889d509d509d509d509d505050505050505050509295509295909350565b60018214806111325750600082145b6111a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964204d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561121857600080fd5b505afa15801561122c573d6000803e3d6000fd5b505050506040513d602081101561124257600080fd5b81019080805190602001909291905050508112156113515760008514156112815761126d8187610d20565b90919293509091509050508092505061129c565b61128c8187866108a7565b9091929350909150905050809250505b8273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008389866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b15801561130757600080fd5b505af115801561131b573d6000803e3d6000fd5b50505050506040513d602081101561133257600080fd5b81019080805190602001909291905050505080806001019150506111d2565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c557600080fd5b505afa1580156113d9573d6000803e3d6000fd5b505050506040513d60208110156113ef57600080fd5b8101908080519060200190929190505050828501128061149057508073ffffffffffffffffffffffffffffffffffffffff1663fafe70056040518163ffffffff1660e01b815260040160206040518083038186803b15801561145057600080fd5b505afa158015611464573d6000803e3d6000fd5b505050506040513d602081101561147a57600080fd5b8101908080519060200190929190505050828401125b611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f537175617265206973206f7574206f662072616e67652e00000000000000000081525060200191505060405180910390fd5b6000808590505b8386018112156115ff5760008590505b8486018112156115f15761152d8282610d20565b9091929350909150905050809350508373ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008484876040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b1580156115a757600080fd5b505af11580156115bb573d6000803e3d6000fd5b50505050506040513d60208110156115d257600080fd5b8101908080519060200190929190505050508080600101915050611519565b508080600101915050611509565b505050505050565b60018214806116165750600082145b611688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f496e76616c6964204d6f6465000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff166326c19e406040518163ffffffff1660e01b815260040160206040518083038186803b1580156116fc57600080fd5b505afa158015611710573d6000803e3d6000fd5b505050506040513d602081101561172657600080fd5b8101908080519060200190929190505050811215611835576000851415611765576117518682610d20565b909192935090915090505080925050611780565b6117708682866108a7565b9091929350909150905050809250505b8273ffffffffffffffffffffffffffffffffffffffff16633f8e0b4867016345785d8a00008884866040518563ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506020604051808303818588803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b50505050506040513d602081101561181657600080fd5b81019080805190602001909291905050505080806001019150506116b6565b50505050505056fea265627a7a7231582053e50b725db85b8022e84f34925b013fec7abb83540f8a71773fbc281c8b915164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6881E114 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x6881E114 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x7BA334EF EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xCC49B72C EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF3E164A EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xF8263904 EQ PUSH2 0x3B3 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x45BBBB2 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xCD9A64D EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE7AF8F7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1B0D9294 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4F15F351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1123 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1607 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 EQ DUP1 PUSH2 0x4E0 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964206D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x584 DUP8 DUP8 PUSH2 0xD20 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x59D DUP8 DUP8 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BC DUP8 DUP8 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP11 DUP11 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x88E JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x912C2162 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP5 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x74A JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6BC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x930 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35D45C1D DUP14 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4DB6446 DUP15 DUP15 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP15 DUP4 LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x2 DUP7 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB0D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP DUP5 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP DUP1 PUSH1 0x0 SHL SWAP2 POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP DUP2 DUP7 LT ISZERO PUSH2 0xBA1 JUMPI DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP DUP4 DUP5 PUSH1 0x0 SHL DUP8 DUP5 DUP9 SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A9C1512 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E94A6A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2DE2D40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35D45C1D DUP13 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4DB6446 DUP14 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF77 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x10FE JUMPI JUMPDEST DUP1 DUP7 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x2 DUP7 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x106C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP5 PUSH1 0x2 EXP DUP2 PUSH1 0x0 SHR MUL SWAP2 POP DUP2 PUSH1 0x0 SHL SWAP1 POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST DUP4 DUP5 PUSH1 0x0 SHL DUP8 DUP4 DUP9 SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP SWAP14 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x1132 JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST PUSH2 0x11A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x1351 JUMPI PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1281 JUMPI PUSH2 0x126D DUP2 DUP8 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0x129C JUMP JUMPDEST PUSH2 0x128C DUP2 DUP8 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP4 DUP10 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11D2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 DUP6 ADD SLT DUP1 PUSH2 0x1490 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAFE7005 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1464 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 DUP5 ADD SLT JUMPDEST PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x537175617265206973206F7574206F662072616E67652E000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 SWAP1 POP JUMPDEST DUP4 DUP7 ADD DUP2 SLT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP7 ADD DUP2 SLT ISZERO PUSH2 0x15F1 JUMPI PUSH2 0x152D DUP3 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP4 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1519 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1509 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x1616 JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST PUSH2 0x1688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26C19E40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1710 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 SLT ISZERO PUSH2 0x1835 JUMPI PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1751 DUP7 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1770 DUP7 DUP3 DUP7 PUSH2 0x8A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F8E0B48 PUSH8 0x16345785D8A0000 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16B6 JUMP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE8 0xE5 SIGNEXTEND PUSH19 0x5DB85B8022E84F34925B013FEC7ABB83540F8A PUSH18 0x773FBC281C8B915164736F6C634300051100 ORIGIN ",
							"sourceMap": "1418:8267:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:241;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1931:241:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2181:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2181:45:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4977:635;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4977:635:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9088:587;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9088:587:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9088:587:0;;;;;;;;;;;;;;;;;7978:1060;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7978:1060:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7978:1060:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1603:319:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2250:1256;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2250:1256:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2250:1256:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6413:677;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6413:677:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7143:737;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7143:737:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5744:660;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5744:660:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1931:241;1973:3;1990:35;2051:19;;;;;;;;;;;1990:81;;2084:15;2102:12;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2102:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2102:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2102:30:0;;;;;;;;;;;;;;;;2084:48;;2152:11;2145:18;;;;1931:241;:::o;2181:45::-;;;;;;;;;;;;;:::o;4977:635::-;5058:7;5097:1;5089:4;:9;:22;;;;5110:1;5102:4;:9;5089:22;5081:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5140:35;5201:19;;;;;;;;;;;5140:81;;5238:13;5258:14;5268:1;5270;5258:9;:14::i;:::-;5236:36;;;;;;5307:1;5299:4;:9;5296:165;;;5342:14;5352:1;5354;5342:9;:14::i;:::-;5328:28;;;;;;;;;;;;;;;5296:165;;;5418:29;5437:1;5439;5441:5;5418:18;:29::i;:::-;5404:43;;;;;;;;;;;;;;;5296:165;5495:15;5513:12;:33;;;5553:9;5564:1;5566;5568:5;5513:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5513:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5513:61:0;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5513:61:0;;;;;;;;;;;;;;;;5495:79;;5596:7;5589:14;;;;;4977:635;;;;;;:::o;9088:587::-;9134:15;9163:35;9224:19;;;;;;;;;;;9163:81;;9257:18;9288:24;9325:13;9341:1;9325:17;;9359:8;9370:1;9359:12;;9355:284;9377:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9377:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9377:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9377:28:0;;;;;;;;;;;;;;;;9373:1;:32;9355:284;;;9432:8;9443:1;9432:12;;9428:198;9450:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9450:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9450:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9450:28:0;;;;;;;;;;;;;;;;9446:1;:32;9428:198;;;9520:12;:30;;;9551:1;9553;9520:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9520:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9520:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9520:35:0;;;;;;;;;;;;;;;;9506:49;;9596:11;9578:8;9587:5;9578:15;;;;;;;;;;;;;:29;;;;;9479:3;;;;;;;9428:198;;;;9406:3;;;;;;;9355:284;;;;9658:8;9651:15;;;;;;9088:587;:::o;7978:1060::-;8055:7;8063;8071;8079;8087;8108:35;8169:19;;;;;;;;;;;8108:81;;8202:13;8218:12;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8218:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8218:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8218:30:0;;;;;;;;;;;;;;;;8202:46;;8261:22;8294:6;8286:15;;8261:40;;8316:17;8336:12;:24;;;8361:1;8363;8336:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8336:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8336:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8336:29:0;;;;;;;;;;;;;;;;8316:49;;8378:12;8401;:25;;;8427:1;8429;8401:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8401:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8401:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8401:30:0;;;;;;;;;;;;;;;;8378:54;;8445:11;8459:1;8445:15;;8476;8494:1;8476:19;;8508:17;8538:22;8594:332;8610:5;8600:7;:15;8594:332;;;8641:55;8665:8;8674:14;8689:5;8648:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8648:47:0;;;8641:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8641:55:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8641:55:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8641:55:0;;;;;;;;;;;;;;;;8629:67;;8746:3;8743:1;:6;8731:9;8726:15;;:24;8709:41;;8783:14;8775:23;;8763:35;;8811:7;;;;;;;8843:9;8834:8;:18;8831:68;;;8871:9;;;;;;;8831:68;8594:332;;;8938:7;;;;;;;;8977:5;8991;8983:14;;8998:8;9007:9;9017:3;8969:52;;;;;;;;;;;;;;;;;;;7978:1060;;;;;;;;;:::o;1603:319::-;1645:7;1678:35;1739:19;;;;;;;;;;;1678:81;;1772:12;:30;;;1803:10;1772:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1772:42:0;;;;1828:19;1850:12;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1850:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1850:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1850:32:0;;;;;;;;;;;;;;;;1828:54;;1902:11;1895:18;;;;1603:319;:::o;2250:1256::-;2301:7;2309;2317;2325;2333;2356:35;2417:19;;;;;;;;;;;2356:81;;2450:13;2466:12;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2466:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2466:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2466:30:0;;;;;;;;;;;;;;;;2450:46;;2509:22;2542:6;2534:15;;2509:40;;2564:17;2584:12;:24;;;2609:1;2611;2584:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2584:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2584:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2584:29:0;;;;;;;;;;;;;;;;2564:49;;2626:12;2649;:25;;;2675:1;2677;2649:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2649:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2649:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2649:30:0;;;;;;;;;;;;;;;;2626:54;;2693:11;2707:1;2693:15;;2722:16;2741:55;2765:8;2774:14;2789:5;2748:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2748:47:0;;;2741:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2741:55:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2741:55:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2741:55:0;;;;;;;;;;;;;;;;2722:74;;2811:20;2852:3;2849:1;:6;2839:7;2834:13;;:22;2811:45;;2869:18;2898:14;2890:23;;2869:44;;2944:9;2933:8;:20;2930:481;;;2972:275;2989:9;2978:8;:20;2972:275;;;3029:55;3053:8;3062:14;3077:5;3036:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3036:47:0;;;3029:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3029:55:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3029:55:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3029:55:0;;;;;;;;;;;;;;;;3017:67;;3139:3;3136:1;:6;3124:9;3119:15;;:24;3102:41;;3181:14;3173:23;;3161:35;;3216:7;;;;;;;2972:275;;;3385:7;;;;;;;;2930:481;3448:5;3462;3454:14;;3469:8;3478:9;3488:3;3440:52;;;;;;;;;;;;;;;;;;;2250:1256;;;;;;;;:::o;6413:677::-;6514:1;6506:4;:9;:22;;;;6527:1;6519:4;:9;6506:22;6498:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6559:35;6620:19;;;;;;;;;;;6559:81;;6653:13;6683:8;6694:1;6683:12;;6679:403;6702:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6702:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6702:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6702:28:0;;;;;;;;;;;;;;;;6698:1;:32;6679:403;;;6789:1;6781:4;:9;6778:200;;;6829:19;6839:1;6841:6;6829:9;:19::i;:::-;6815:33;;;;;;;;;;;;;;;6778:200;;;6925:34;6944:1;6946:6;6953:5;6925:18;:34::i;:::-;6911:48;;;;;;;;;;;;;;;6778:200;7000:12;:33;;;7040:9;7051:1;7053:6;7060:5;7000:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7000:66:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7000:66:0;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7000:66:0;;;;;;;;;;;;;;;;;6732:3;;;;;;;6679:403;;;;6413:677;;;;;:::o;7143:737::-;7245:35;7306:19;;;;;;;;;;;7245:81;;7388:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7388:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7388:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7388:28:0;;;;;;;;;;;;;;;;7374:10;7362:11;:22;7361:55;:114;;;;7447:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7447:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7447:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7447:28:0;;;;;;;;;;;;;;;;7433:10;7421:11;:22;7420:55;7361:114;7341:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7541:13;7571:5;7579:11;7571:19;;7567:305;7609:10;7597:11;:22;7592:1;:28;7567:305;;;7649:5;7657:11;7649:19;;7645:214;7687:10;7675:11;:22;7670:1;:28;7645:214;;;7742:14;7752:1;7754;7742:9;:14::i;:::-;7728:28;;;;;;;;;;;;;;;7779:12;:33;;;7819:9;7830:1;7832;7834:5;7779:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7779:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7779:61:0;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7779:61:0;;;;;;;;;;;;;;;;;7701:3;;;;;;;7645:214;;;;7623:3;;;;;;;7567:305;;;;7143:737;;;;;:::o;5744:660::-;5837:1;5829:4;:9;:22;;;;5850:1;5842:4;:9;5829:22;5821:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5882:35;5943:19;;;;;;;;;;;5882:81;;5976:13;6006:8;6017:1;6006:12;;6002:394;6025:12;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6025:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6025:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6025:28:0;;;;;;;;;;;;;;;;6021:1;:32;6002:394;;;6112:1;6104:4;:9;6101:194;;;6152:16;6162:3;6166:1;6152:9;:16::i;:::-;6138:30;;;;;;;;;;;;;;;6101:194;;;6245:31;6264:3;6268:1;6270:5;6245:18;:31::i;:::-;6231:45;;;;;;;;;;;;;;;6101:194;6317:12;:33;;;6357:9;6368:3;6372:1;6374:5;6317:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6317:63:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6317:63:0;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6317:63:0;;;;;;;;;;;;;;;;;6055:3;;;;;;;6002:394;;;;5744:660;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1251600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"arrangeContract()": "infinite",
								"captureCell(int256,int256,uint256,uint256)": "infinite",
								"captureColumn(int256,uint256,uint256)": "infinite",
								"captureRow(int256,uint256,uint256)": "infinite",
								"captureSquare(int256,int256,int256)": "infinite",
								"findNonce(int256,int256)": "infinite",
								"findPowerfullNonce(int256,int256,uint256)": "infinite",
								"showCellOwners()": "infinite",
								"t_address()": "1076",
								"teamNumber()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "MSTORE"
								},
								{
									"begin": 1478,
									"end": 1520,
									"name": "PUSH",
									"value": "A7C40D644BDB571F98D72A08AF2A1FB4AB4F24FE"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "DUP1"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "EXP"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "DUP2"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "SLOAD"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "DUP2"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "MUL"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "NOT"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "AND"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "SWAP1"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "DUP4"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "AND"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "MUL"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "OR"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "SWAP1"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "SSTORE"
								},
								{
									"begin": 1448,
									"end": 1520,
									"name": "POP"
								},
								{
									"begin": 1544,
									"end": 1586,
									"name": "PUSH",
									"value": "6D99001C37C88F996F629698C822F19DB68388D"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "EXP"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "DUP2"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "SLOAD"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "DUP2"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "MUL"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "NOT"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "AND"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "SWAP1"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "DUP4"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "AND"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "MUL"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "OR"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "SWAP1"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "SSTORE"
								},
								{
									"begin": 1528,
									"end": 1586,
									"name": "POP"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 2209,
									"end": 2224,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2209,
									"end": 2224,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2209,
									"end": 2224,
									"name": "SHL"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "SHR"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 2209,
									"end": 2226,
									"name": "JUMPDEST"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "EXP"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "DUP2"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "SLOAD"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "DUP2"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "MUL"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "NOT"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "AND"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "SWAP1"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "DUP4"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "AND"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "MUL"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "OR"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "SWAP1"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "SSTORE"
								},
								{
									"begin": 2181,
									"end": 2226,
									"name": "POP"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "POP"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "JUMP"
								},
								{
									"begin": 1603,
									"end": 1922,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1922,
									"name": "JUMPDEST"
								},
								{
									"begin": 1645,
									"end": 1652,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "DUP1"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "DUP1"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "SWAP1"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "SLOAD"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "SWAP1"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "EXP"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "SWAP1"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "DIV"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1739,
									"end": 1758,
									"name": "AND"
								},
								{
									"begin": 1678,
									"end": 1759,
									"name": "SWAP1"
								},
								{
									"begin": 1678,
									"end": 1759,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1784,
									"name": "DUP1"
								},
								{
									"begin": 1772,
									"end": 1802,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1802,
									"name": "AND"
								},
								{
									"begin": 1772,
									"end": 1802,
									"name": "PUSH",
									"value": "2A9C1512"
								},
								{
									"begin": 1803,
									"end": 1813,
									"name": "CALLER"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "MLOAD"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP3"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "AND"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "SHL"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP2"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "MSTORE"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "ADD"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP1"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP3"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "AND"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "AND"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP2"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "MSTORE"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "ADD"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "SWAP2"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "MLOAD"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP1"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP4"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "SUB"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP2"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP8"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "DUP1"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "GAS"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "CALL"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1772,
									"end": 1814,
									"name": "POP"
								},
								{
									"begin": 1828,
									"end": 1847,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1862,
									"name": "DUP2"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "AND"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "PUSH",
									"value": "5E94A6A4"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "MLOAD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP2"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "AND"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SHL"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP2"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "MSTORE"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "ADD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "MLOAD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP4"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SUB"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP2"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP7"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "GAS"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "STATICCALL"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "MLOAD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP2"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "ADD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "DUP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "MLOAD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "ADD"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP3"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP2"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "SWAP1"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1850,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1828,
									"end": 1882,
									"name": "SWAP1"
								},
								{
									"begin": 1828,
									"end": 1882,
									"name": "POP"
								},
								{
									"begin": 1902,
									"end": 1913,
									"name": "DUP1"
								},
								{
									"begin": 1895,
									"end": 1913,
									"name": "SWAP3"
								},
								{
									"begin": 1895,
									"end": 1913,
									"name": "POP"
								},
								{
									"begin": 1895,
									"end": 1913,
									"name": "POP"
								},
								{
									"begin": 1895,
									"end": 1913,
									"name": "POP"
								},
								{
									"begin": 1603,
									"end": 1922,
									"name": "SWAP1"
								},
								{
									"begin": 1603,
									"end": 1922,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "JUMPDEST"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "DUP1"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "CODECOPY"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 9685,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582053e50b725db85b8022e84f34925b013fec7abb83540f8a71773fbc281c8b915164736f6c63430005110032",
									".code": [
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "LT"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "SHR"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "6881E114"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "GT"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "6881E114"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "7BA334EF"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "CC49B72C"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "DF3E164A"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "F8263904"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMP"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "45BBBB2"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "CD9A64D"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "E7AF8F7"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "1B0D9294"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "4F15F351"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 9685,
											"name": "REVERT"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "RETURN"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "JUMPDEST"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "JUMPDEST"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DUP3"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "MSTORE"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "ADD"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SUB"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "RETURN"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "JUMPDEST"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP3"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP3"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP3"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP3"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "JUMPDEST"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "MLOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP3"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "MSTORE"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "ADD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "MLOAD"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP2"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SUB"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "RETURN"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "JUMPDEST"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "JUMPDEST"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP3"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SUB"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP3"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP4"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MUL"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP4"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP3"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP2"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SUB"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "RETURN"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MLOAD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP7"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP6"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP5"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP4"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP3"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP6"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "MLOAD"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SUB"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "RETURN"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "DUP3"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "SUB"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "RETURN"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "JUMPDEST"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "JUMPDEST"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MLOAD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP7"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MSTORE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP6"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MSTORE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP5"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MSTORE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP4"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MSTORE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP3"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MSTORE"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP6"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "MLOAD"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP2"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SUB"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "RETURN"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP2"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "ADD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "ADD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP3"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP2"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "ADD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP3"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP2"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "DUP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "ADD"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP3"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP2"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "SWAP1"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "STOP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP2"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP3"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP2"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP3"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP2"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP3"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP2"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "STOP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "JUMPDEST"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP2"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "ADD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "ADD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP3"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP2"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "ADD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP3"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP2"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "DUP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "ADD"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP3"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP2"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "JUMPDEST"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "STOP"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1973,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2025,
											"name": "DUP1"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "DUP1"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "SLOAD"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "EXP"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "DIV"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "AND"
										},
										{
											"begin": 1990,
											"end": 2071,
											"name": "SWAP1"
										},
										{
											"begin": 1990,
											"end": 2071,
											"name": "POP"
										},
										{
											"begin": 2084,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "PUSH",
											"value": "B2DE2D40"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MLOAD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SHL"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MSTORE"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MLOAD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP4"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SUB"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP7"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "GAS"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "STATICCALL"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MLOAD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "DUP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MLOAD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP3"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP2"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2084,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2084,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 2152,
											"end": 2163,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "SWAP3"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 1931,
											"end": 2172,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "JUMPDEST"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SLOAD"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "EXP"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DIV"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "JUMPDEST"
										},
										{
											"begin": 5058,
											"end": 5065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "EQ"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "JUMPI"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "POP"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "DUP4"
										},
										{
											"begin": 5102,
											"end": 5111,
											"name": "EQ"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5089,
											"end": 5111,
											"name": "JUMPDEST"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "JUMPI"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MLOAD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MSTORE"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "ADD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP1"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP1"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "ADD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP3"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "SUB"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP3"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MSTORE"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MSTORE"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "ADD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP1"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "496E76616C6964206D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MSTORE"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "POP"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "ADD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "SWAP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "POP"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "POP"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "MLOAD"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "DUP1"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "SWAP2"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "SUB"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "SWAP1"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "REVERT"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5081,
											"end": 5127,
											"name": "JUMPDEST"
										},
										{
											"begin": 5140,
											"end": 5175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "SLOAD"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "EXP"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "DIV"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "AND"
										},
										{
											"begin": 5140,
											"end": 5221,
											"name": "SWAP1"
										},
										{
											"begin": 5140,
											"end": 5221,
											"name": "POP"
										},
										{
											"begin": 5238,
											"end": 5251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "DUP8"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "DUP8"
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "JUMPDEST"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "SWAP2"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5307,
											"end": 5308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5303,
											"name": "DUP6"
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "EQ"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "ISZERO"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "JUMPI"
										},
										{
											"begin": 5342,
											"end": 5356,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "DUP8"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP8"
										},
										{
											"begin": 5342,
											"end": 5351,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5342,
											"end": 5356,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5342,
											"end": 5356,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5342,
											"end": 5356,
											"name": "JUMPDEST"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP1"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP2"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP3"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP4"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP1"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP2"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP1"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "DUP1"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP2"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "JUMP"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "JUMPDEST"
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5437,
											"end": 5438,
											"name": "DUP8"
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "DUP8"
										},
										{
											"begin": 5441,
											"end": 5446,
											"name": "DUP7"
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "JUMPDEST"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP1"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP2"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP3"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP4"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP1"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP2"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP1"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "DUP1"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "SWAP2"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5404,
											"end": 5447,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5296,
											"end": 5461,
											"name": "JUMPDEST"
										},
										{
											"begin": 5495,
											"end": 5510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5525,
											"name": "DUP3"
										},
										{
											"begin": 5513,
											"end": 5546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5546,
											"name": "AND"
										},
										{
											"begin": 5513,
											"end": 5546,
											"name": "PUSH",
											"value": "3F8E0B48"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP11"
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "DUP11"
										},
										{
											"begin": 5568,
											"end": 5573,
											"name": "DUP7"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MLOAD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP6"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "AND"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SHL"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MSTORE"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP5"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MSTORE"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP4"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MSTORE"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP3"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MSTORE"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP4"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MLOAD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP4"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SUB"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP6"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP9"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "GAS"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "CALL"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MLOAD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "MLOAD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP3"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP2"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5495,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5495,
											"end": 5574,
											"name": "POP"
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "SWAP4"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP5"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "SWAP4"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "POP"
										},
										{
											"begin": 4977,
											"end": 5612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "JUMPDEST"
										},
										{
											"begin": 9134,
											"end": 9149,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9163,
											"end": 9198,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "DUP1"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SWAP1"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SLOAD"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SWAP1"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "EXP"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SWAP1"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "DIV"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "AND"
										},
										{
											"begin": 9163,
											"end": 9244,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9244,
											"name": "POP"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9288,
											"end": 9312,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9325,
											"end": 9338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "DUP1"
										},
										{
											"begin": 9325,
											"end": 9342,
											"name": "SWAP1"
										},
										{
											"begin": 9325,
											"end": 9342,
											"name": "POP"
										},
										{
											"begin": 9359,
											"end": 9367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9371,
											"name": "DUP1"
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "SWAP1"
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "JUMPDEST"
										},
										{
											"begin": 9377,
											"end": 9389,
											"name": "DUP5"
										},
										{
											"begin": 9377,
											"end": 9403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9377,
											"end": 9403,
											"name": "AND"
										},
										{
											"begin": 9377,
											"end": 9403,
											"name": "PUSH",
											"value": "26C19E40"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "MLOAD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP2"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "AND"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SHL"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP2"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "MSTORE"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "ADD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "MLOAD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP4"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SUB"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP2"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP7"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "GAS"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "STATICCALL"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "MLOAD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP2"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "ADD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "DUP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "MLOAD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "ADD"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP3"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP2"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "SWAP1"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9377,
											"end": 9405,
											"name": "POP"
										},
										{
											"begin": 9373,
											"end": 9374,
											"name": "DUP2"
										},
										{
											"begin": 9373,
											"end": 9405,
											"name": "SLT"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "ISZERO"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "JUMPI"
										},
										{
											"begin": 9432,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "DUP1"
										},
										{
											"begin": 9432,
											"end": 9444,
											"name": "SWAP1"
										},
										{
											"begin": 9432,
											"end": 9444,
											"name": "POP"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "JUMPDEST"
										},
										{
											"begin": 9450,
											"end": 9462,
											"name": "DUP6"
										},
										{
											"begin": 9450,
											"end": 9476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9450,
											"end": 9476,
											"name": "AND"
										},
										{
											"begin": 9450,
											"end": 9476,
											"name": "PUSH",
											"value": "FAFE7005"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "MLOAD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "AND"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SHL"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "MLOAD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP4"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SUB"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP7"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "GAS"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "STATICCALL"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "MLOAD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "MLOAD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP3"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP2"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "SWAP1"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9450,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "SLT"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "ISZERO"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "JUMPI"
										},
										{
											"begin": 9520,
											"end": 9532,
											"name": "DUP6"
										},
										{
											"begin": 9520,
											"end": 9550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9520,
											"end": 9550,
											"name": "AND"
										},
										{
											"begin": 9520,
											"end": 9550,
											"name": "PUSH",
											"value": "912C2162"
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP4"
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "DUP4"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MLOAD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP4"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "AND"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SHL"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MSTORE"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ADD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP4"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MSTORE"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ADD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP3"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MSTORE"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ADD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP3"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MLOAD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP4"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SUB"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP7"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "GAS"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "STATICCALL"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MLOAD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ADD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "DUP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "MLOAD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "ADD"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP3"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP2"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "SWAP1"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9506,
											"end": 9555,
											"name": "SWAP5"
										},
										{
											"begin": 9506,
											"end": 9555,
											"name": "POP"
										},
										{
											"begin": 9596,
											"end": 9607,
											"name": "DUP5"
										},
										{
											"begin": 9578,
											"end": 9586,
											"name": "DUP5"
										},
										{
											"begin": 9587,
											"end": 9592,
											"name": "DUP5"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "DUP2"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "MLOAD"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "DUP2"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "LT"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "JUMPI"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "INVALID"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "JUMPDEST"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "MUL"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "ADD"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "ADD"
										},
										{
											"begin": 9578,
											"end": 9607,
											"name": "DUP2"
										},
										{
											"begin": 9578,
											"end": 9607,
											"name": "DUP2"
										},
										{
											"begin": 9578,
											"end": 9607,
											"name": "MSTORE"
										},
										{
											"begin": 9578,
											"end": 9607,
											"name": "POP"
										},
										{
											"begin": 9578,
											"end": 9607,
											"name": "POP"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "SWAP2"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "JUMP"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "JUMPDEST"
										},
										{
											"begin": 9428,
											"end": 9626,
											"name": "POP"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "DUP1"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "DUP1"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "ADD"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "SWAP2"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "POP"
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "JUMP"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "JUMPDEST"
										},
										{
											"begin": 9355,
											"end": 9639,
											"name": "POP"
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "DUP2"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "SWAP5"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "POP"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "POP"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "POP"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "POP"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9675,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "JUMPDEST"
										},
										{
											"begin": 8055,
											"end": 8062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8070,
											"name": "DUP1"
										},
										{
											"begin": 8071,
											"end": 8078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8086,
											"name": "DUP1"
										},
										{
											"begin": 8087,
											"end": 8094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8143,
											"name": "DUP1"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "DUP1"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "SWAP1"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "SLOAD"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "SWAP1"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "EXP"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "SWAP1"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "DIV"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "AND"
										},
										{
											"begin": 8108,
											"end": 8189,
											"name": "SWAP1"
										},
										{
											"begin": 8108,
											"end": 8189,
											"name": "POP"
										},
										{
											"begin": 8202,
											"end": 8215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8230,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8218,
											"end": 8246,
											"name": "AND"
										},
										{
											"begin": 8218,
											"end": 8246,
											"name": "PUSH",
											"value": "B2DE2D40"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "MLOAD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "AND"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SHL"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "MSTORE"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "ADD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "MLOAD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP4"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SUB"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP7"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "GAS"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "STATICCALL"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "MLOAD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "ADD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "DUP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "MLOAD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "ADD"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP3"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP2"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8218,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8202,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8202,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8261,
											"end": 8283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8300,
											"name": "DUP2"
										},
										{
											"begin": 8286,
											"end": 8301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8301,
											"name": "SHL"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "SWAP1"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8348,
											"name": "DUP4"
										},
										{
											"begin": 8336,
											"end": 8360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8360,
											"name": "AND"
										},
										{
											"begin": 8336,
											"end": 8360,
											"name": "PUSH",
											"value": "35D45C1D"
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP14"
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "DUP14"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MLOAD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP4"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "AND"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SHL"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP4"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP3"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP3"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MLOAD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP4"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SUB"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP7"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "GAS"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "STATICCALL"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MLOAD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "MLOAD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP3"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP2"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8365,
											"name": "SWAP1"
										},
										{
											"begin": 8316,
											"end": 8365,
											"name": "POP"
										},
										{
											"begin": 8378,
											"end": 8390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8413,
											"name": "DUP5"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "AND"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "PUSH",
											"value": "E4DB6446"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "DUP15"
										},
										{
											"begin": 8429,
											"end": 8430,
											"name": "DUP15"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "AND"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SHL"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP3"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP3"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SUB"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP7"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "GAS"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "STATICCALL"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP3"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP2"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8378,
											"end": 8432,
											"name": "SWAP1"
										},
										{
											"begin": 8378,
											"end": 8432,
											"name": "POP"
										},
										{
											"begin": 8445,
											"end": 8456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8445,
											"end": 8460,
											"name": "SWAP1"
										},
										{
											"begin": 8445,
											"end": 8460,
											"name": "POP"
										},
										{
											"begin": 8476,
											"end": 8491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8495,
											"name": "DUP1"
										},
										{
											"begin": 8476,
											"end": 8495,
											"name": "SWAP1"
										},
										{
											"begin": 8476,
											"end": 8495,
											"name": "POP"
										},
										{
											"begin": 8508,
											"end": 8525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8560,
											"name": "DUP1"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "JUMPDEST"
										},
										{
											"begin": 8610,
											"end": 8615,
											"name": "DUP15"
										},
										{
											"begin": 8600,
											"end": 8607,
											"name": "DUP4"
										},
										{
											"begin": 8600,
											"end": 8615,
											"name": "LT"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "ISZERO"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "JUMPI"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8665,
											"end": 8673,
											"name": "DUP7"
										},
										{
											"begin": 8674,
											"end": 8688,
											"name": "DUP9"
										},
										{
											"begin": 8689,
											"end": 8694,
											"name": "DUP7"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MLOAD"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP5"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MSTORE"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP4"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MSTORE"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP3"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MSTORE"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "SWAP4"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8648,
											"end": 8695,
											"name": "MSTORE"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP3"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP4"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP2"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP4"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SUB"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP6"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "GAS"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "STATICCALL"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP3"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP2"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8629,
											"end": 8696,
											"name": "SWAP2"
										},
										{
											"begin": 8629,
											"end": 8696,
											"name": "POP"
										},
										{
											"begin": 8746,
											"end": 8749,
											"name": "DUP5"
										},
										{
											"begin": 8743,
											"end": 8744,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8743,
											"end": 8749,
											"name": "EXP"
										},
										{
											"begin": 8731,
											"end": 8740,
											"name": "DUP3"
										},
										{
											"begin": 8726,
											"end": 8741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8741,
											"name": "SHR"
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "MUL"
										},
										{
											"begin": 8709,
											"end": 8750,
											"name": "SWAP1"
										},
										{
											"begin": 8709,
											"end": 8750,
											"name": "POP"
										},
										{
											"begin": 8783,
											"end": 8797,
											"name": "DUP1"
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "SHL"
										},
										{
											"begin": 8763,
											"end": 8798,
											"name": "SWAP2"
										},
										{
											"begin": 8763,
											"end": 8798,
											"name": "POP"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP4"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP1"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "ADD"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP5"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "POP"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "POP"
										},
										{
											"begin": 8843,
											"end": 8852,
											"name": "DUP2"
										},
										{
											"begin": 8834,
											"end": 8842,
											"name": "DUP7"
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "LT"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "ISZERO"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPI"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "DUP3"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "DUP1"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "ADD"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "SWAP4"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "POP"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "POP"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPDEST"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "JUMP"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8594,
											"end": 8926,
											"name": "JUMPDEST"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP4"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP1"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP1"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SUB"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP5"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "POP"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "POP"
										},
										{
											"begin": 8977,
											"end": 8982,
											"name": "DUP4"
										},
										{
											"begin": 8991,
											"end": 8996,
											"name": "DUP5"
										},
										{
											"begin": 8983,
											"end": 8997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8997,
											"name": "SHL"
										},
										{
											"begin": 8998,
											"end": 9006,
											"name": "DUP8"
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP5"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "DUP9"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "SWAP14"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "SWAP14"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "SWAP14"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "SWAP14"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "SWAP14"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 9021,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP4"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP8"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP7"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP4"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "SWAP4"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 9038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1713,
											"name": "DUP1"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "DUP1"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "SLOAD"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "EXP"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "DIV"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "AND"
										},
										{
											"begin": 1678,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1678,
											"end": 1759,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1784,
											"name": "DUP1"
										},
										{
											"begin": 1772,
											"end": 1802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1772,
											"end": 1802,
											"name": "AND"
										},
										{
											"begin": 1772,
											"end": 1802,
											"name": "PUSH",
											"value": "2A9C1512"
										},
										{
											"begin": 1803,
											"end": 1813,
											"name": "CALLER"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "SHL"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "MSTORE"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "MSTORE"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP8"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "GAS"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "CALL"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "PUSH",
											"value": "5E94A6A4"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "MLOAD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SHL"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "MSTORE"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "MLOAD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP4"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SUB"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP7"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "GAS"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "STATICCALL"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "MLOAD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "MLOAD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP3"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP2"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1902,
											"end": 1913,
											"name": "DUP1"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "SWAP3"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "POP"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "POP"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1603,
											"end": 1922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "JUMPDEST"
										},
										{
											"begin": 2301,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2317,
											"end": 2324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2391,
											"name": "DUP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "DUP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SLOAD"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "EXP"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "DIV"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2356,
											"end": 2437,
											"name": "SWAP1"
										},
										{
											"begin": 2356,
											"end": 2437,
											"name": "POP"
										},
										{
											"begin": 2450,
											"end": 2463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "DUP2"
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "AND"
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "PUSH",
											"value": "B2DE2D40"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "MLOAD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "AND"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SHL"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "MSTORE"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "ADD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "MLOAD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP4"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SUB"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP7"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "GAS"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "STATICCALL"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "MLOAD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "ADD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "DUP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "MLOAD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "ADD"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP3"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP2"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2466,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2450,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2496,
											"name": "POP"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "DUP2"
										},
										{
											"begin": 2534,
											"end": 2549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2549,
											"name": "SHL"
										},
										{
											"begin": 2509,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2509,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP4"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "AND"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH",
											"value": "35D45C1D"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "DUP13"
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "DUP13"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MLOAD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP4"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "AND"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SHL"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MSTORE"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP4"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MSTORE"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP3"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MSTORE"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP3"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MLOAD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP4"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SUB"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP7"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "GAS"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "STATICCALL"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MLOAD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "DUP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "MLOAD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP3"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP2"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2564,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2564,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2661,
											"name": "DUP5"
										},
										{
											"begin": 2649,
											"end": 2674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2674,
											"name": "AND"
										},
										{
											"begin": 2649,
											"end": 2674,
											"name": "PUSH",
											"value": "E4DB6446"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP14"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "DUP14"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MLOAD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP4"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "AND"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SHL"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MSTORE"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ADD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP4"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MSTORE"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ADD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP3"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MSTORE"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ADD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP3"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MLOAD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP4"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SUB"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP7"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "GAS"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "STATICCALL"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MLOAD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ADD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MLOAD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "ADD"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP3"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP2"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2626,
											"end": 2680,
											"name": "SWAP1"
										},
										{
											"begin": 2626,
											"end": 2680,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "POP"
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2765,
											"end": 2773,
											"name": "DUP5"
										},
										{
											"begin": 2774,
											"end": 2788,
											"name": "DUP7"
										},
										{
											"begin": 2789,
											"end": 2794,
											"name": "DUP5"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MLOAD"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP1"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP5"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP2"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP4"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP2"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP3"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "DUP2"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "SWAP4"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "POP"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "POP"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "POP"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "POP"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "SWAP1"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "MLOAD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP3"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "MLOAD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP4"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP2"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "MLOAD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP4"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SUB"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP2"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP6"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "GAS"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "STATICCALL"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "MLOAD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP2"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "DUP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "MLOAD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP3"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP2"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2741,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2722,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2722,
											"end": 2796,
											"name": "POP"
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2855,
											"name": "DUP4"
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "EXP"
										},
										{
											"begin": 2839,
											"end": 2846,
											"name": "DUP3"
										},
										{
											"begin": 2834,
											"end": 2847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2847,
											"name": "SHR"
										},
										{
											"begin": 2834,
											"end": 2856,
											"name": "MUL"
										},
										{
											"begin": 2811,
											"end": 2856,
											"name": "SWAP1"
										},
										{
											"begin": 2811,
											"end": 2856,
											"name": "POP"
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "DUP2"
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "SHL"
										},
										{
											"begin": 2869,
											"end": 2913,
											"name": "SWAP1"
										},
										{
											"begin": 2869,
											"end": 2913,
											"name": "POP"
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP1"
										},
										{
											"begin": 2933,
											"end": 2941,
											"name": "DUP7"
										},
										{
											"begin": 2933,
											"end": 2953,
											"name": "GT"
										},
										{
											"begin": 2930,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 2930,
											"end": 3411,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2930,
											"end": 3411,
											"name": "JUMPI"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "JUMPDEST"
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "DUP1"
										},
										{
											"begin": 2978,
											"end": 2986,
											"name": "DUP7"
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "GT"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "ISZERO"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "JUMPI"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3053,
											"end": 3061,
											"name": "DUP7"
										},
										{
											"begin": 3062,
											"end": 3076,
											"name": "DUP9"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP7"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MLOAD"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "ADD"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP1"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP5"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP2"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MSTORE"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "ADD"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP4"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP2"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MSTORE"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "ADD"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP3"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "DUP2"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MSTORE"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "ADD"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "SWAP4"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "SWAP1"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3083,
											"name": "MSTORE"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP3"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "ADD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP4"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "ADD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP2"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP4"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SUB"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP2"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP6"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "GAS"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "STATICCALL"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP2"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "ADD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "DUP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "ADD"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP3"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP2"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3029,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3017,
											"end": 3084,
											"name": "SWAP1"
										},
										{
											"begin": 3017,
											"end": 3084,
											"name": "POP"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "DUP5"
										},
										{
											"begin": 3136,
											"end": 3137,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "EXP"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP2"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "SHR"
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "MUL"
										},
										{
											"begin": 3102,
											"end": 3143,
											"name": "SWAP2"
										},
										{
											"begin": 3102,
											"end": 3143,
											"name": "POP"
										},
										{
											"begin": 3181,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3196,
											"name": "SHL"
										},
										{
											"begin": 3161,
											"end": 3196,
											"name": "SWAP1"
										},
										{
											"begin": 3161,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP4"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "ADD"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "SWAP5"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "POP"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "POP"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "JUMP"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2972,
											"end": 3247,
											"name": "JUMPDEST"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP4"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP1"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "SWAP1"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "SUB"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "SWAP5"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "POP"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "POP"
										},
										{
											"begin": 2930,
											"end": 3411,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2930,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP4"
										},
										{
											"begin": 3462,
											"end": 3467,
											"name": "DUP5"
										},
										{
											"begin": 3454,
											"end": 3468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3468,
											"name": "SHL"
										},
										{
											"begin": 3469,
											"end": 3477,
											"name": "DUP8"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4"
										},
										{
											"begin": 3488,
											"end": 3491,
											"name": "DUP9"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "SWAP14"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "SWAP14"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "SWAP14"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "SWAP14"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "SWAP14"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 3440,
											"end": 3492,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP6"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP6"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "SWAP4"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 3506,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP3"
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "EQ"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "DUP1"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "JUMPI"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6523,
											"name": "DUP3"
										},
										{
											"begin": 6519,
											"end": 6528,
											"name": "EQ"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "JUMPDEST"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "JUMPI"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MLOAD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MSTORE"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "ADD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP1"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP1"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "ADD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP3"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "SUB"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP3"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MSTORE"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MSTORE"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "ADD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP1"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MSTORE"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "POP"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "ADD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "SWAP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "POP"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "POP"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "MLOAD"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "DUP1"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "SWAP2"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "SUB"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "SWAP1"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "REVERT"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 6498,
											"end": 6544,
											"name": "JUMPDEST"
										},
										{
											"begin": 6559,
											"end": 6594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "DUP1"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "SWAP1"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "SLOAD"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "SWAP1"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "EXP"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "SWAP1"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "DIV"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6620,
											"end": 6639,
											"name": "AND"
										},
										{
											"begin": 6559,
											"end": 6640,
											"name": "SWAP1"
										},
										{
											"begin": 6559,
											"end": 6640,
											"name": "POP"
										},
										{
											"begin": 6653,
											"end": 6666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6691,
											"name": "DUP1"
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6695,
											"name": "SWAP1"
										},
										{
											"begin": 6683,
											"end": 6695,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "JUMPDEST"
										},
										{
											"begin": 6702,
											"end": 6714,
											"name": "DUP3"
										},
										{
											"begin": 6702,
											"end": 6728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6702,
											"end": 6728,
											"name": "AND"
										},
										{
											"begin": 6702,
											"end": 6728,
											"name": "PUSH",
											"value": "FAFE7005"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "MLOAD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP2"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "AND"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SHL"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP2"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "MSTORE"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "ADD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "MLOAD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP4"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SUB"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP2"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP7"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "GAS"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "STATICCALL"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "MLOAD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP2"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "ADD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "DUP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "MLOAD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "ADD"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP3"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP2"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "SWAP1"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6702,
											"end": 6730,
											"name": "POP"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "DUP2"
										},
										{
											"begin": 6698,
											"end": 6730,
											"name": "SLT"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "ISZERO"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "JUMPI"
										},
										{
											"begin": 6789,
											"end": 6790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6785,
											"name": "DUP6"
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "EQ"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "ISZERO"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "JUMPI"
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "DUP2"
										},
										{
											"begin": 6841,
											"end": 6847,
											"name": "DUP8"
										},
										{
											"begin": 6829,
											"end": 6838,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "JUMPDEST"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP3"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP4"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "SWAP3"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "JUMP"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "JUMPDEST"
										},
										{
											"begin": 6925,
											"end": 6959,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 6944,
											"end": 6945,
											"name": "DUP2"
										},
										{
											"begin": 6946,
											"end": 6952,
											"name": "DUP8"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP7"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6925,
											"end": 6959,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6925,
											"end": 6959,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 6925,
											"end": 6959,
											"name": "JUMPDEST"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP1"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP2"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP3"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP4"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP1"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP2"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP1"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "DUP1"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "SWAP3"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6911,
											"end": 6959,
											"name": "POP"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 6778,
											"end": 6978,
											"name": "JUMPDEST"
										},
										{
											"begin": 7000,
											"end": 7012,
											"name": "DUP3"
										},
										{
											"begin": 7000,
											"end": 7033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7000,
											"end": 7033,
											"name": "AND"
										},
										{
											"begin": 7000,
											"end": 7033,
											"name": "PUSH",
											"value": "3F8E0B48"
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "DUP4"
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "DUP10"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP7"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MLOAD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP6"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "AND"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SHL"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MSTORE"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP5"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MSTORE"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP4"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MSTORE"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP3"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MSTORE"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP4"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MLOAD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP4"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SUB"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP6"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP9"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "GAS"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "CALL"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MLOAD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "DUP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "MLOAD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "ADD"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP3"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP2"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "SWAP1"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 7000,
											"end": 7066,
											"name": "POP"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "DUP1"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "DUP1"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "ADD"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "SWAP2"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "POP"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "JUMP"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "JUMPDEST"
										},
										{
											"begin": 6679,
											"end": 7082,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "POP"
										},
										{
											"begin": 6413,
											"end": 7090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "JUMPDEST"
										},
										{
											"begin": 7245,
											"end": 7280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "DUP1"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "SLOAD"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "EXP"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "DIV"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "AND"
										},
										{
											"begin": 7245,
											"end": 7326,
											"name": "SWAP1"
										},
										{
											"begin": 7245,
											"end": 7326,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "DUP1"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "AND"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"value": "26C19E40"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "MLOAD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP2"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "AND"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SHL"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP2"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "MSTORE"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "ADD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "MLOAD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP4"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SUB"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP2"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP7"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "GAS"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "STATICCALL"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "MLOAD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP2"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "ADD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "DUP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "MLOAD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "ADD"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP3"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP2"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "SWAP1"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3"
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "DUP6"
										},
										{
											"begin": 7362,
											"end": 7384,
											"name": "ADD"
										},
										{
											"begin": 7361,
											"end": 7416,
											"name": "SLT"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "DUP1"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "JUMPI"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7473,
											"name": "AND"
										},
										{
											"begin": 7447,
											"end": 7473,
											"name": "PUSH",
											"value": "FAFE7005"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "MLOAD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP2"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "AND"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SHL"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP2"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "MSTORE"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "ADD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "MLOAD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP4"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SUB"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP2"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP7"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "GAS"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "STATICCALL"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "MLOAD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP2"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "ADD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "MLOAD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "ADD"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP3"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP2"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "SWAP1"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7447,
											"end": 7475,
											"name": "POP"
										},
										{
											"begin": 7433,
											"end": 7443,
											"name": "DUP3"
										},
										{
											"begin": 7421,
											"end": 7432,
											"name": "DUP5"
										},
										{
											"begin": 7421,
											"end": 7443,
											"name": "ADD"
										},
										{
											"begin": 7420,
											"end": 7475,
											"name": "SLT"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 7361,
											"end": 7475,
											"name": "JUMPDEST"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "JUMPI"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP3"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "SUB"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP3"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "537175617265206973206F7574206F662072616E67652E000000000000000000"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "SUB"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "REVERT"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 7341,
											"end": 7526,
											"name": "JUMPDEST"
										},
										{
											"begin": 7541,
											"end": 7554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "DUP1"
										},
										{
											"begin": 7579,
											"end": 7590,
											"name": "DUP6"
										},
										{
											"begin": 7571,
											"end": 7590,
											"name": "SWAP1"
										},
										{
											"begin": 7571,
											"end": 7590,
											"name": "POP"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": 7609,
											"end": 7619,
											"name": "DUP4"
										},
										{
											"begin": 7597,
											"end": 7608,
											"name": "DUP7"
										},
										{
											"begin": 7597,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7593,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "SLT"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "ISZERO"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "JUMPI"
										},
										{
											"begin": 7649,
											"end": 7654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7668,
											"name": "DUP6"
										},
										{
											"begin": 7649,
											"end": 7668,
											"name": "SWAP1"
										},
										{
											"begin": 7649,
											"end": 7668,
											"name": "POP"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "JUMPDEST"
										},
										{
											"begin": 7687,
											"end": 7697,
											"name": "DUP5"
										},
										{
											"begin": 7675,
											"end": 7686,
											"name": "DUP7"
										},
										{
											"begin": 7675,
											"end": 7697,
											"name": "ADD"
										},
										{
											"begin": 7670,
											"end": 7671,
											"name": "DUP2"
										},
										{
											"begin": 7670,
											"end": 7698,
											"name": "SLT"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "ISZERO"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "JUMPI"
										},
										{
											"begin": 7742,
											"end": 7756,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 7752,
											"end": 7753,
											"name": "DUP3"
										},
										{
											"begin": 7754,
											"end": 7755,
											"name": "DUP3"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 7742,
											"end": 7756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7756,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 7742,
											"end": 7756,
											"name": "JUMPDEST"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP3"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP4"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "SWAP4"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7728,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7791,
											"name": "DUP4"
										},
										{
											"begin": 7779,
											"end": 7812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7812,
											"name": "AND"
										},
										{
											"begin": 7779,
											"end": 7812,
											"name": "PUSH",
											"value": "3F8E0B48"
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "DUP5"
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "DUP5"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "DUP8"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MLOAD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP6"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "AND"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SHL"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MSTORE"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP5"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MSTORE"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP4"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MSTORE"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP3"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MSTORE"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP4"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MLOAD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP4"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SUB"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP6"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP9"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "GAS"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "CALL"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MLOAD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "MLOAD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "ADD"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP3"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP2"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "SWAP1"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7779,
											"end": 7840,
											"name": "POP"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "DUP1"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "DUP1"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "ADD"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "SWAP2"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "POP"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "POP"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "JUMP"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "JUMPDEST"
										},
										{
											"begin": 7645,
											"end": 7859,
											"name": "POP"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "DUP1"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "DUP1"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "ADD"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "SWAP2"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "POP"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "POP"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "JUMP"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": 7567,
											"end": 7872,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7880,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "JUMPDEST"
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "DUP3"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "EQ"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "JUMPI"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "POP"
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "DUP3"
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "EQ"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "JUMPDEST"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "JUMPI"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MLOAD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MSTORE"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "ADD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP1"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP1"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "ADD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP3"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "SUB"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP3"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MSTORE"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MSTORE"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "ADD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP1"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MSTORE"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "POP"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "ADD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "SWAP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "POP"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "POP"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "MLOAD"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "DUP1"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "SWAP2"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "SUB"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "SWAP1"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "REVERT"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5821,
											"end": 5867,
											"name": "JUMPDEST"
										},
										{
											"begin": 5882,
											"end": 5917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "DUP1"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SLOAD"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "EXP"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "DIV"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "AND"
										},
										{
											"begin": 5882,
											"end": 5963,
											"name": "SWAP1"
										},
										{
											"begin": 5882,
											"end": 5963,
											"name": "POP"
										},
										{
											"begin": 5976,
											"end": 5989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6014,
											"name": "DUP1"
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6006,
											"end": 6018,
											"name": "POP"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "JUMPDEST"
										},
										{
											"begin": 6025,
											"end": 6037,
											"name": "DUP3"
										},
										{
											"begin": 6025,
											"end": 6051,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6051,
											"name": "AND"
										},
										{
											"begin": 6025,
											"end": 6051,
											"name": "PUSH",
											"value": "26C19E40"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "MLOAD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "AND"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SHL"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "MSTORE"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "ADD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "MLOAD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP4"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SUB"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP7"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "GAS"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "STATICCALL"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "MLOAD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "ADD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "DUP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "MLOAD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "ADD"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP3"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP2"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6053,
											"name": "SLT"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "ISZERO"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "JUMPI"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "DUP6"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "EQ"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "ISZERO"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "JUMPI"
										},
										{
											"begin": 6152,
											"end": 6168,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 6162,
											"end": 6165,
											"name": "DUP7"
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "DUP3"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6152,
											"end": 6168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6152,
											"end": 6168,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 6152,
											"end": 6168,
											"name": "JUMPDEST"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP1"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP2"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP3"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP4"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP1"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP2"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP1"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "DUP1"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP3"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "POP"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "JUMP"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "JUMPDEST"
										},
										{
											"begin": 6245,
											"end": 6276,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 6264,
											"end": 6267,
											"name": "DUP7"
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "DUP3"
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "DUP7"
										},
										{
											"begin": 6245,
											"end": 6263,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6245,
											"end": 6276,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6245,
											"end": 6276,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 6245,
											"end": 6276,
											"name": "JUMPDEST"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP1"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP2"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP3"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP4"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP1"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP2"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP1"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "DUP1"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "SWAP3"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6231,
											"end": 6276,
											"name": "POP"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 6101,
											"end": 6295,
											"name": "JUMPDEST"
										},
										{
											"begin": 6317,
											"end": 6329,
											"name": "DUP3"
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "AND"
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "PUSH",
											"value": "3F8E0B48"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "DUP9"
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "DUP5"
										},
										{
											"begin": 6374,
											"end": 6379,
											"name": "DUP7"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MLOAD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP6"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "AND"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SHL"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MSTORE"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP5"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MSTORE"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP4"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MSTORE"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP3"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MSTORE"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP4"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MLOAD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP4"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SUB"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP6"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP9"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "GAS"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "CALL"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MLOAD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "DUP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "MLOAD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "ADD"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP3"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP2"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP1"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "DUP1"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "DUP1"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "ADD"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "SWAP2"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "POP"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "POP"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "JUMP"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "JUMPDEST"
										},
										{
											"begin": 6002,
											"end": 6396,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "POP"
										},
										{
											"begin": 5744,
											"end": 6404,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"arrangeContract()": "6881e114",
							"captureCell(int256,int256,uint256,uint256)": "0e7af8f7",
							"captureColumn(int256,uint256,uint256)": "cc49b72c",
							"captureRow(int256,uint256,uint256)": "f8263904",
							"captureSquare(int256,int256,int256)": "df3e164a",
							"findNonce(int256,int256)": "7ba334ef",
							"findPowerfullNonce(int256,int256,uint256)": "4f15f351",
							"showCellOwners()": "1b0d9294",
							"t_address()": "0cd9a64d",
							"teamNumber()": "045bbbb2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"arrangeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"captureCell\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"column\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"captureColumn\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"row\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"captureRow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"startPointX\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"startPointY\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sideLength\",\"type\":\"int256\"}],\"name\":\"captureSquare\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"findNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"findPowerfullNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showCellOwners\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"t_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sprint1.sol\":\"BaBoBa\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sprint1.sol\":{\"keccak256\":\"0x2770fdd46ee1d9135de64a5db0fe0ea7162b3986c7e9167708d92c272eb2ea05\",\"urls\":[\"bzz-raw://ca3b5cebfc4eb0de7ec6501dee4035fb39ec0398fb8416ddcda0b615d8586255\",\"dweb:/ipfs/QmX7xFtidqRJMHSaE8RiNb6P2kSBHr66TNsqex2ticSYj2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 124,
								"contract": "Sprint1.sol:BaBoBa",
								"label": "powerContractAddres",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 127,
								"contract": "Sprint1.sol:BaBoBa",
								"label": "myAdd",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 178,
								"contract": "Sprint1.sol:BaBoBa",
								"label": "t_address",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"PowerContractInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellNonce",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellPower",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellTeamNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamCallCount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamCount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getSprintNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "teamAccount",
									"type": "address"
								}
							],
							"name": "getTeamNumberFromAccount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTotalCalls",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTxOrigin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getXdimension",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getYdimension",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								},
								{
									"internalType": "bytes32",
									"name": "nonce",
									"type": "bytes32"
								}
							],
							"name": "setCellsFromContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setMyTeamContract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showCellTeamNumbers",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showLeaderBoard",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showLeaderBoard_Calls",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCellHash(int256,int256)": "35d45c1d",
							"getCellNonce(int256,int256)": "e628daf5",
							"getCellPower(int256,int256)": "e4db6446",
							"getCellTeamNumber(int256,int256)": "912c2162",
							"getMyTeamCallCount()": "f42ec501",
							"getMyTeamContract()": "5e94a6a4",
							"getMyTeamCount()": "271deb26",
							"getMyTeamNumber()": "b2de2d40",
							"getSprintNumber()": "4554b4dd",
							"getTeamNumberFromAccount(address)": "cfd5f1d0",
							"getTotalCalls()": "ff1cd21d",
							"getTxOrigin()": "b8077e28",
							"getXdimension()": "26c19e40",
							"getYdimension()": "fafe7005",
							"setCellsFromContract(int256,int256,bytes32)": "3f8e0b48",
							"setMyTeamContract(address)": "2a9c1512",
							"showCellTeamNumbers()": "095d0958",
							"showLeaderBoard()": "9b697123",
							"showLeaderBoard_Calls()": "0f630158"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellPower\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellTeamNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamCallCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSprintNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAccount\",\"type\":\"address\"}],\"name\":\"getTeamNumberFromAccount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCalls\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTxOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getXdimension\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getYdimension\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"setCellsFromContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setMyTeamContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showCellTeamNumbers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showLeaderBoard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showLeaderBoard_Calls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sprint1.sol\":\"PowerContractInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sprint1.sol\":{\"keccak256\":\"0x2770fdd46ee1d9135de64a5db0fe0ea7162b3986c7e9167708d92c272eb2ea05\",\"urls\":[\"bzz-raw://ca3b5cebfc4eb0de7ec6501dee4035fb39ec0398fb8416ddcda0b615d8586255\",\"dweb:/ipfs/QmX7xFtidqRJMHSaE8RiNb6P2kSBHr66TNsqex2ticSYj2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Sprint1.sol": {
				"ast": {
					"absolutePath": "Sprint1.sol",
					"exportedSymbols": {
						"BaBoBa": [
							836
						],
						"PowerContractInterface": [
							121
						]
					},
					"id": 837,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "PowerContractInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "92:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "92:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "102:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "91:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "132:9:0"
									},
									"scope": 121,
									"src": "71:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "171:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "171:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "181:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 13,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:20:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:9:0"
									},
									"scope": 121,
									"src": "149:72:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellPower",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "250:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 20,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "260:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "249:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "291:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 25,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:8:0"
									},
									"scope": 121,
									"src": "228:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellTeamNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "333:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 29,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "343:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 31,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "332:20:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "374:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 34,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "373:8:0"
									},
									"scope": 121,
									"src": "306:76:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSprintNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "437:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 39,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:8:0"
									},
									"scope": 121,
									"src": "389:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getXdimension",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "498:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 44,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:8:0"
									},
									"scope": 121,
									"src": "452:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYdimension",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "559:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 49,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "558:8:0"
									},
									"scope": 121,
									"src": "513:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamNumberFromAccount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "teamAccount",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "608:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "607:21:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "650:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 56,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "650:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "649:5:0"
									},
									"scope": 121,
									"src": "574:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMyTeamContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "689:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:25:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:0"
									},
									"scope": 121,
									"src": "662:59:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "778:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:9:0"
									},
									"scope": 121,
									"src": "728:59:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "841:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 71,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "841:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:5:0"
									},
									"scope": 121,
									"src": "794:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamCallCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "904:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 76,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "904:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "903:5:0"
									},
									"scope": 121,
									"src": "853:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showCellTeamNumbers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "968:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "968:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:15:0"
									},
									"scope": 121,
									"src": "916:67:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1038:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 86,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1038:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1037:5:0"
									},
									"scope": 121,
									"src": "990:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showLeaderBoard",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1098:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1098:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1097:15:0"
									},
									"scope": 121,
									"src": "1050:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showLeaderBoard_Calls",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1174:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1173:15:0"
									},
									"scope": 121,
									"src": "1120:69:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTxOrigin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1240:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1239:9:0"
									},
									"scope": 121,
									"src": "1196:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCellsFromContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1286:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 105,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1286:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1293:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 107,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1293:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1300:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1285:29:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1338:9:0"
									},
									"scope": 121,
									"src": "1256:92:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalCalls",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1401:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:6:0"
									},
									"scope": 121,
									"src": "1355:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 837,
							"src": "30:1382:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 836,
							"linearizedBaseContracts": [
								836
							],
							"name": "BaBoBa",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 124,
									"name": "powerContractAddres",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "1448:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 122,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307841376334304436343462444235373146393844373241303841463241314662344162346632346665",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1478:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xA7c40D644bDB571F98D72A08AF2A1Fb4Ab4f24fe"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 127,
									"name": "myAdd",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "1528:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 125,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1528:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830364439393030314333374338386639393666363239363938633832324631396442363833383844",
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1544:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x06D99001C37C88f996f629698c822F19dB68388D"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1653:269:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "1678:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 132,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "1678:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 135,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1739:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 134,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1716:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1716:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1678:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1803:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1803:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1772:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setMyTeamContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1772:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1772:42:0"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"name": "teamAddress",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "1828:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 145,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1828:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 147,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1850:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMyTeamContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 69,
														"src": "1850:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1850:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1828:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"name": "teamAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 146,
													"src": "1902:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 131,
												"id": 152,
												"nodeType": "Return",
												"src": "1895:18:0"
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "arrangeContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1644:9:0"
									},
									"scope": 836,
									"src": "1603:319:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1977:195:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "1990:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 159,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "1990:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 162,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2051:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2028:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1990:81:0"
											},
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"name": "team_number",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "2084:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 165,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2084:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 167,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2102:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMyTeamNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "2102:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2084:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"name": "team_number",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2152:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 158,
												"id": 172,
												"nodeType": "Return",
												"src": "2145:18:0"
											}
										]
									},
									"documentation": null,
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "teamNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1973:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 156,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1973:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1972:5:0"
									},
									"scope": 836,
									"src": "1931:241:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 178,
									"name": "t_address",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "2181:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 175,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2181:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 176,
											"name": "arrangeContract",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 154,
											"src": "2209:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
												"typeString": "function () returns (address)"
											}
										},
										"id": 177,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2209:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2341:1165:0",
										"statements": [
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2356:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 195,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "2356:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2417:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2394:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2356:81:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"name": "teamNo",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2450:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 201,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2450:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 206,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 203,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2466:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMyTeamNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "2466:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2450:46:0"
											},
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"name": "bytes32_TeamNo",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2509:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 207,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 210,
															"name": "teamNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:40:0"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"name": "cellHash",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2564:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 213,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 217,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2609:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2611:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2584:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getCellHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2584:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_int256_$_t_int256_$returns$_t_bytes32_$",
															"typeString": "function (int256,int256) view external returns (bytes32)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2564:49:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"name": "pow",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2626:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 226,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "2675:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 227,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "2677:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 224,
																	"name": "pc_interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "2649:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																		"typeString": "contract PowerContractInterface"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getCellPower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "2649:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) view external returns (int256)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2641:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2626:54:0"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2693:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 231,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2707:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2693:15:0"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"name": "newHash",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2722:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 240,
																	"name": "cellHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2765:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 241,
																	"name": "bytes32_TeamNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "2774:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 242,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2789:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 238,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "2748:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2748:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2748:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 237,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "2741:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2722:74:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"name": "multiplication",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2811:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 249,
																"name": "newHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2834:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2849:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "pow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "2852:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2849:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 254,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2848:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2834:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2811:45:0"
											},
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"name": "finalHash",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2869:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 257,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 260,
															"name": "multiplication",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2898:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2869:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "cellHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2933:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "finalHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "2944:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2933:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2930:481:0",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "2954:457:0",
													"statements": [
														{
															"body": {
																"id": 300,
																"nodeType": "Block",
																"src": "2999:248:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 269,
																				"name": "finalHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "3017:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 273,
																								"name": "cellHash",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 214,
																								"src": "3053:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 274,
																								"name": "bytes32_TeamNo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 208,
																								"src": "3062:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 275,
																								"name": "nonce",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 232,
																								"src": "3077:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 271,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 838,
																								"src": "3036:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 272,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "3036:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3036:47:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 270,
																					"name": "sha256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3029:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3029:55:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3017:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 279,
																		"nodeType": "ExpressionStatement",
																		"src": "3017:67:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 280,
																				"name": "multiplication",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "3102:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 282,
																							"name": "finalHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 258,
																							"src": "3124:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3119:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": "uint"
																					},
																					"id": 283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3119:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "32",
																								"id": 284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3136:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 285,
																								"name": "pow",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 222,
																								"src": "3139:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3136:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 287,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3135:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3119:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3102:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 290,
																		"nodeType": "ExpressionStatement",
																		"src": "3102:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 291,
																				"name": "finalHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "3161:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 293,
																						"name": "multiplication",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 247,
																						"src": "3181:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3173:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": "bytes32"
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3173:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3161:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 296,
																		"nodeType": "ExpressionStatement",
																		"src": "3161:35:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3216:7:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 297,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "3216:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 299,
																		"nodeType": "ExpressionStatement",
																		"src": "3216:7:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "cellHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2978:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "finalHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "2989:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2978:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 301,
															"nodeType": "WhileStatement",
															"src": "2972:275:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "3385:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 302,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3385:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "3385:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 307,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3448:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 309,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3462:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": "bytes32"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3454:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 311,
															"name": "cellHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3469:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "finalHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "3478:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "pow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3488:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 314,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3447:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
													}
												},
												"functionReturnParameters": 194,
												"id": 315,
												"nodeType": "Return",
												"src": "3440:52:0"
											}
										]
									},
									"documentation": null,
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2269:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 179,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2269:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2275:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 181,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2275:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2268:13:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2309:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2325:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 190,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2333:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2300:41:0"
									},
									"scope": 836,
									"src": "2250:1256:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "5066:546:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "5089:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5097:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5089:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 334,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "5102:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5110:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5102:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5089:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964206d6f6465",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5112:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_075099378048f2ab9856453b8a114e22d9cc6d454029be491a36589d7f3af433",
																"typeString": "literal_string \"Invalid mode\""
															},
															"value": "Invalid mode"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_075099378048f2ab9856453b8a114e22d9cc6d454029be491a36589d7f3af433",
																"typeString": "literal_string \"Invalid mode\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															855
														],
														"referencedDeclaration": 855,
														"src": "5081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5081:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "5081:46:0"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "5140:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 341,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "5140:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 344,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "5201:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 343,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "5178:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5140:81:0"
											},
											{
												"assignments": [
													null,
													348,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 348,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "5238:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 347,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 350,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5268:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 351,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5270:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 349,
														"name": "findNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
															"typeString": "function (int256,int256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5258:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5236:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 354,
														"name": "mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5299:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5307:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5299:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "5386:75:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		null,
																		{
																			"argumentTypes": null,
																			"id": 366,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "5406:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 367,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "5404:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																		"typeString": "tuple(,bytes32,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 369,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "5437:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 370,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "5439:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 371,
																			"name": "limit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "5441:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 368,
																		"name": "findPowerfullNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "5418:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$_t_uint256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (int256,int256,uint256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5418:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																	}
																},
																"src": "5404:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "5404:43:0"
														}
													]
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "5296:165:0",
												"trueBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "5310:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		null,
																		{
																			"argumentTypes": null,
																			"id": 357,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "5330:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "5328:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																		"typeString": "tuple(,bytes32,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 360,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "5352:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 361,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "5354:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 359,
																		"name": "findNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "5342:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (int256,int256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5342:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																	}
																},
																"src": "5328:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 364,
															"nodeType": "ExpressionStatement",
															"src": "5328:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"name": "newHash",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "5495:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 377,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5495:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 384,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5564:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 385,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 386,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5568:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "302e31",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5553:9:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000_by_1",
																	"typeString": "int_const 100000000000000000"
																},
																"value": "0.1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100000000000000000_by_1",
																	"typeString": "int_const 100000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "pc_interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "5513:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																		"typeString": "contract PowerContractInterface"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "setCellsFromContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 115,
																"src": "5513:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5513:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value_$",
																"typeString": "function (uint256) pure returns (function (int256,int256,bytes32) payable external returns (bytes32))"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5513:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value",
															"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5495:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"name": "newHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 378,
													"src": "5596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 329,
												"id": 390,
												"nodeType": "Return",
												"src": "5589:14:0"
											}
										]
									},
									"documentation": null,
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "captureCell",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4998:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 318,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "4998:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5005:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 320,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "5005:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"name": "mode",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5023:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4997:37:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5057:9:0"
									},
									"scope": 836,
									"src": "4977:635:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5808:596:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 402,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "5829:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5837:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5829:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 405,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "5842:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5850:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5842:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5829:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964204d6f6465",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5852:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																"typeString": "literal_string \"Invalid Mode\""
															},
															"value": "Invalid Mode"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																"typeString": "literal_string \"Invalid Mode\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															855
														],
														"referencedDeclaration": 855,
														"src": "5821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "5821:46:0"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "5882:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 412,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "5882:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 415,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "5943:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "5920:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5920:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:81:0"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "5976:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 418,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5976:13:0"
											},
											{
												"body": {
													"id": 468,
													"nodeType": "Block",
													"src": "6059:337:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "6104:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6112:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6104:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 454,
																"nodeType": "Block",
																"src": "6208:87:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					null,
																					{
																						"argumentTypes": null,
																						"id": 445,
																						"name": "nonce",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 419,
																						"src": "6233:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					null,
																					null,
																					null
																				],
																				"id": 446,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6231:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																					"typeString": "tuple(,bytes32,,,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 448,
																						"name": "row",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "6264:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 449,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6268:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 450,
																						"name": "limit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 398,
																						"src": "6270:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 447,
																					"name": "findPowerfullNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6245:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$_t_uint256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																						"typeString": "function (int256,int256,uint256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																					}
																				},
																				"id": 451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6245:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																					"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																				}
																			},
																			"src": "6231:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 453,
																		"nodeType": "ExpressionStatement",
																		"src": "6231:45:0"
																	}
																]
															},
															"id": 455,
															"nodeType": "IfStatement",
															"src": "6101:194:0",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "6115:72:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					null,
																					{
																						"argumentTypes": null,
																						"id": 436,
																						"name": "nonce",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 419,
																						"src": "6140:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					null,
																					null,
																					null
																				],
																				"id": 437,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6138:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																					"typeString": "tuple(,bytes32,,,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 439,
																						"name": "row",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "6162:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 440,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6166:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 438,
																					"name": "findNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6152:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																						"typeString": "function (int256,int256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																					}
																				},
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6152:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																					"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																				}
																			},
																			"src": "6138:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 443,
																		"nodeType": "ExpressionStatement",
																		"src": "6138:30:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 463,
																		"name": "row",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "6368:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 464,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "6372:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 465,
																		"name": "nonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "6374:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "302e31",
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6357:9:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000_by_1",
																				"typeString": "int_const 100000000000000000"
																			},
																			"value": "0.1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000000_by_1",
																				"typeString": "int_const 100000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 456,
																				"name": "pc_interface",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6317:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																					"typeString": "contract PowerContractInterface"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "setCellsFromContract",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 115,
																			"src": "6317:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$",
																				"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																			}
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6317:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value_$",
																			"typeString": "function (uint256) pure returns (function (int256,int256,bytes32) payable external returns (bytes32))"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6317:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value",
																		"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6317:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "6317:63:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 425,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "6021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 426,
																"name": "pc_interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "6025:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																	"typeString": "contract PowerContractInterface"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getXdimension",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 47,
															"src": "6025:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																"typeString": "function () view external returns (int256)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6025:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6021:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"initializationExpression": {
													"assignments": [
														422
													],
													"declarations": [
														{
															"constant": false,
															"id": 422,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 469,
															"src": "6006:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 421,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 424,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6017:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6006:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6055:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6055:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 432,
													"nodeType": "ExpressionStatement",
													"src": "6055:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6002:394:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "captureRow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"name": "row",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5764:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 393,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "5764:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"name": "mode",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5772:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5782:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5763:30:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5808:0:0"
									},
									"scope": 836,
									"src": "5744:660:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "6485:605:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 481,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6506:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6514:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6506:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 484,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6519:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6527:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6519:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6506:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964204d6f6465",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6529:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																"typeString": "literal_string \"Invalid Mode\""
															},
															"value": "Invalid Mode"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																"typeString": "literal_string \"Invalid Mode\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															855
														],
														"referencedDeclaration": 855,
														"src": "6498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6498:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "6498:46:0"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "6559:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 491,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "6559:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 494,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "6620:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 493,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "6597:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6597:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6559:81:0"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "6653:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 497,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6653:13:0"
											},
											{
												"body": {
													"id": 547,
													"nodeType": "Block",
													"src": "6736:346:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 512,
																	"name": "mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6781:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6789:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6781:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 533,
																"nodeType": "Block",
																"src": "6888:90:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					null,
																					{
																						"argumentTypes": null,
																						"id": 524,
																						"name": "nonce",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "6913:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					null,
																					null,
																					null
																				],
																				"id": 525,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6911:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																					"typeString": "tuple(,bytes32,,,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 527,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 501,
																						"src": "6944:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 528,
																						"name": "column",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 473,
																						"src": "6946:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 529,
																						"name": "limit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "6953:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 526,
																					"name": "findPowerfullNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6925:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$_t_uint256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																						"typeString": "function (int256,int256,uint256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																					}
																				},
																				"id": 530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6925:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																					"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																				}
																			},
																			"src": "6911:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 532,
																		"nodeType": "ExpressionStatement",
																		"src": "6911:48:0"
																	}
																]
															},
															"id": 534,
															"nodeType": "IfStatement",
															"src": "6778:200:0",
															"trueBody": {
																"id": 523,
																"nodeType": "Block",
																"src": "6792:75:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					null,
																					{
																						"argumentTypes": null,
																						"id": 515,
																						"name": "nonce",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "6817:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					null,
																					null,
																					null
																				],
																				"id": 516,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6815:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																					"typeString": "tuple(,bytes32,,,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 518,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 501,
																						"src": "6839:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 519,
																						"name": "column",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 473,
																						"src": "6841:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 517,
																					"name": "findNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6829:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																						"typeString": "function (int256,int256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																					}
																				},
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6829:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																					"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																				}
																			},
																			"src": "6815:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 522,
																		"nodeType": "ExpressionStatement",
																		"src": "6815:33:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 542,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "7051:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 543,
																		"name": "column",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "7053:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 544,
																		"name": "nonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "7060:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "302e31",
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7040:9:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000_by_1",
																				"typeString": "int_const 100000000000000000"
																			},
																			"value": "0.1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000000_by_1",
																				"typeString": "int_const 100000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 535,
																				"name": "pc_interface",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 492,
																				"src": "7000:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																					"typeString": "contract PowerContractInterface"
																				}
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "setCellsFromContract",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 115,
																			"src": "7000:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$",
																				"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7000:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value_$",
																			"typeString": "function (uint256) pure returns (function (int256,int256,bytes32) payable external returns (bytes32))"
																		}
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7000:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value",
																		"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7000:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 546,
															"nodeType": "ExpressionStatement",
															"src": "7000:66:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 504,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "6698:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 505,
																"name": "pc_interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "6702:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																	"typeString": "contract PowerContractInterface"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getYdimension",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "6702:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																"typeString": "function () view external returns (int256)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6702:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6698:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"initializationExpression": {
													"assignments": [
														501
													],
													"declarations": [
														{
															"constant": false,
															"id": 501,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 548,
															"src": "6683:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 500,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6683:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 503,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6694:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6683:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6732:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 509,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6732:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 511,
													"nodeType": "ExpressionStatement",
													"src": "6732:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6679:403:0"
											}
										]
									},
									"documentation": null,
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "captureColumn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"name": "column",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6436:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 472,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6436:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"name": "mode",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6447:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6447:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6459:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6435:35:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6485:0:0"
									},
									"scope": 836,
									"src": "6413:677:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "7230:650:0",
										"statements": [
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7245:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 559,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "7245:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 562,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "7306:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 561,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "7283:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7245:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 566,
																				"name": "startPointX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "7362:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 567,
																				"name": "sideLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7374:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7362:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 569,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7361:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 570,
																			"name": "pc_interface",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7388:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																				"typeString": "contract PowerContractInterface"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getXdimension",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 47,
																		"src": "7388:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																			"typeString": "function () view external returns (int256)"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7388:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7361:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 574,
																				"name": "startPointY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "7421:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 575,
																				"name": "sideLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7433:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7421:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7420:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 578,
																			"name": "pc_interface",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7447:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																				"typeString": "contract PowerContractInterface"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getYdimension",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 52,
																		"src": "7447:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																			"typeString": "function () view external returns (int256)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7447:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7420:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7361:114:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "537175617265206973206f7574206f662072616e67652e",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7488:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4dd2ba08ddc00db466ad41ef0620dd1330c6ffc9fd76001d3fb34f6a307c5918",
																"typeString": "literal_string \"Square is out of range.\""
															},
															"value": "Square is out of range."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4dd2ba08ddc00db466ad41ef0620dd1330c6ffc9fd76001d3fb34f6a307c5918",
																"typeString": "literal_string \"Square is out of range.\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															855
														],
														"referencedDeclaration": 855,
														"src": "7341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7341:185:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7341:185:0"
											},
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7541:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 586,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7541:13:0"
											},
											{
												"body": {
													"id": 637,
													"nodeType": "Block",
													"src": "7627:245:0",
													"statements": [
														{
															"body": {
																"id": 635,
																"nodeType": "Block",
																"src": "7705:154:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					null,
																					{
																						"argumentTypes": null,
																						"id": 615,
																						"name": "nonce",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "7730:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					null,
																					null,
																					null
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "7728:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$_t_bytes32_$__$__$__$",
																					"typeString": "tuple(,bytes32,,,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 618,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 590,
																						"src": "7752:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 619,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 603,
																						"src": "7754:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 617,
																					"name": "findNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "7742:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_int256_$_t_int256_$returns$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																						"typeString": "function (int256,int256) view returns (uint256,bytes32,bytes32,bytes32,uint256)"
																					}
																				},
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7742:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																					"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
																				}
																			},
																			"src": "7728:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "ExpressionStatement",
																		"src": "7728:28:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 630,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 590,
																					"src": "7830:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 631,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "7832:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 632,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "7834:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "302e31",
																						"id": 628,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7819:9:0",
																						"subdenomination": "ether",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000000000000000_by_1",
																							"typeString": "int_const 100000000000000000"
																						},
																						"value": "0.1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_100000000000000000_by_1",
																							"typeString": "int_const 100000000000000000"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 623,
																							"name": "pc_interface",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 560,
																							"src": "7779:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																								"typeString": "contract PowerContractInterface"
																							}
																						},
																						"id": 626,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "setCellsFromContract",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 115,
																						"src": "7779:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$",
																							"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																						}
																					},
																					"id": 627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7779:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value_$",
																						"typeString": "function (uint256) pure returns (function (int256,int256,bytes32) payable external returns (bytes32))"
																					}
																				},
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7779:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_payable$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_bytes32_$value",
																					"typeString": "function (int256,int256,bytes32) payable external returns (bytes32)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7779:61:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 634,
																		"nodeType": "ExpressionStatement",
																		"src": "7779:61:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 606,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "7670:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 607,
																				"name": "startPointY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "7675:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 608,
																				"name": "sideLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7687:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7675:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7674:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7670:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"initializationExpression": {
																"assignments": [
																	603
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 603,
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"scope": 636,
																		"src": "7649:5:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 602,
																			"name": "int",
																			"nodeType": "ElementaryTypeName",
																			"src": "7649:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 605,
																"initialValue": {
																	"argumentTypes": null,
																	"id": 604,
																	"name": "startPointY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "7657:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7649:19:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7701:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 612,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "7701:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 614,
																"nodeType": "ExpressionStatement",
																"src": "7701:3:0"
															},
															"nodeType": "ForStatement",
															"src": "7645:214:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 593,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "7592:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 594,
																	"name": "startPointX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "7597:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 595,
																	"name": "sideLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "7609:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7597:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 597,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7596:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7592:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"initializationExpression": {
													"assignments": [
														590
													],
													"declarations": [
														{
															"constant": false,
															"id": 590,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 638,
															"src": "7571:5:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 589,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "7571:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 592,
													"initialValue": {
														"argumentTypes": null,
														"id": 591,
														"name": "startPointX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "7579:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7571:19:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7623:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "7623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 601,
													"nodeType": "ExpressionStatement",
													"src": "7623:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7567:305:0"
											}
										]
									},
									"documentation": null,
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "captureSquare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "startPointX",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "7166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 551,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "7166:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"name": "startPointY",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "7184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 553,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "7184:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"name": "sideLength",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "7200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 555,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "7200:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7165:50:0"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7230:0:0"
									},
									"scope": 836,
									"src": "7143:737:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "8095:943:0",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8108:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 659,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "8108:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 662,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "8169:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 661,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "8146:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8146:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8108:81:0"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"name": "teamNo",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8202:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 665,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 667,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8218:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMyTeamNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "8218:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8218:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8202:46:0"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"name": "bytes32_TeamNo",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8261:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 671,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 674,
															"name": "teamNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8286:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:40:0"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"name": "cellHash",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8316:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 677,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 681,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8361:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 682,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8363:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 679,
															"name": "pc_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8336:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getCellHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "8336:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_int256_$_t_int256_$returns$_t_bytes32_$",
															"typeString": "function (int256,int256) view external returns (bytes32)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8336:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8316:49:0"
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"name": "pow",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8378:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 690,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "8427:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 691,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "8429:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 688,
																	"name": "pc_interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "8401:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																		"typeString": "contract PowerContractInterface"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getCellPower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "8401:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) view external returns (int256)"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8401:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8393:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:54:0"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8445:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8445:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8459:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8445:15:0"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"name": "counter",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8476:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 699,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8494:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8476:19:0"
											},
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"name": "finalHash",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8508:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 703,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8508:17:0"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"name": "multiplication",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8538:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8538:22:0"
											},
											{
												"body": {
													"id": 751,
													"nodeType": "Block",
													"src": "8616:310:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 712,
																	"name": "finalHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "8629:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 716,
																					"name": "cellHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "8665:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 717,
																					"name": "bytes32_TeamNo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "8674:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 718,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "8689:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 714,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 838,
																					"src": "8648:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "8648:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8648:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 713,
																		"name": "sha256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "8641:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8641:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8629:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "8629:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 723,
																	"name": "multiplication",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "8709:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 725,
																				"name": "finalHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 704,
																				"src": "8731:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8726:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8726:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8743:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 728,
																					"name": "pow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "8746:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8743:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8742:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8726:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8709:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 733,
															"nodeType": "ExpressionStatement",
															"src": "8709:41:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "finalHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "8763:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 736,
																			"name": "multiplication",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "8783:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8775:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": "bytes32"
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8775:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8763:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 739,
															"nodeType": "ExpressionStatement",
															"src": "8763:35:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8811:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 740,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "8811:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "8811:7:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 743,
																	"name": "cellHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "8834:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 744,
																	"name": "finalHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "8843:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8834:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 750,
															"nodeType": "IfStatement",
															"src": "8831:68:0",
															"trueBody": {
																"id": 749,
																"nodeType": "Block",
																"src": "8853:46:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "8871:9:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 746,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "8871:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 748,
																		"nodeType": "ExpressionStatement",
																		"src": "8871:9:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 709,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "8600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 710,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "8610:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8600:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "WhileStatement",
												"src": "8594:332:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "8938:7:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 753,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "8938:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "8938:7:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 756,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "8977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 758,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "8991:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8983:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": "bytes32"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8983:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 760,
															"name": "cellHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8998:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 761,
															"name": "finalHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "9007:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 762,
															"name": "pow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "9017:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 763,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8976:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(uint256,bytes32,bytes32,bytes32,uint256)"
													}
												},
												"functionReturnParameters": 658,
												"id": 764,
												"nodeType": "Return",
												"src": "8969:52:0"
											}
										]
									},
									"documentation": null,
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPowerfullNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8006:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 641,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "8006:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8014:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 643,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "8014:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8005:29:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8071:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8079:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 654,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8087:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8054:41:0"
									},
									"scope": 836,
									"src": "7978:1060:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "9150:525:0",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"name": "pc_interface",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "9163:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PowerContractInterface_$121",
															"typeString": "contract PowerContractInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 772,
															"name": "PowerContractInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 121,
															"src": "9163:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																"typeString": "contract PowerContractInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 775,
															"name": "powerContractAddres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "9224:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 774,
														"name": "PowerContractInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "9201:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PowerContractInterface_$121_$",
															"typeString": "type(contract PowerContractInterface)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9201:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PowerContractInterface_$121",
														"typeString": "contract PowerContractInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9163:81:0"
											},
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"name": "currentTeam",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "9257:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 778,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "9257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9257:18:0"
											},
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"name": "teamsArr",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "9288:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
															"typeString": "int256[]"
														},
														"typeName": {
															"baseType": {
																"id": 782,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "9288:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 783,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "9288:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
																"typeString": "int256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9288:24:0"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "9325:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9341:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9325:17:0"
											},
											{
												"body": {
													"id": 830,
													"nodeType": "Block",
													"src": "9410:229:0",
													"statements": [
														{
															"body": {
																"id": 828,
																"nodeType": "Block",
																"src": "9483:143:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 814,
																				"name": "currentTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "9506:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 817,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 791,
																						"src": "9551:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 818,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 803,
																						"src": "9553:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 815,
																						"name": "pc_interface",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 773,
																						"src": "9520:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																							"typeString": "contract PowerContractInterface"
																						}
																					},
																					"id": 816,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "getCellTeamNumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 37,
																					"src": "9520:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) view external returns (int256)"
																					}
																				},
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9520:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "9506:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 821,
																		"nodeType": "ExpressionStatement",
																		"src": "9506:49:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 822,
																					"name": "teamsArr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "9578:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																						"typeString": "int256[] memory"
																					}
																				},
																				"id": 824,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 823,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "9587:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9578:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 825,
																				"name": "currentTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "9596:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "9578:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 827,
																		"nodeType": "ExpressionStatement",
																		"src": "9578:29:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 806,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "9446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 807,
																			"name": "pc_interface",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "9450:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																				"typeString": "contract PowerContractInterface"
																			}
																		},
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getYdimension",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 52,
																		"src": "9450:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																			"typeString": "function () view external returns (int256)"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9450:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "9446:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 829,
															"initializationExpression": {
																"assignments": [
																	803
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 803,
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"scope": 829,
																		"src": "9432:8:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 805,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9443:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9432:12:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "9479:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 811,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "9479:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 813,
																"nodeType": "ExpressionStatement",
																"src": "9479:3:0"
															},
															"nodeType": "ForStatement",
															"src": "9428:198:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 794,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "9373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 795,
																"name": "pc_interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "9377:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PowerContractInterface_$121",
																	"typeString": "contract PowerContractInterface"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getXdimension",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 47,
															"src": "9377:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																"typeString": "function () view external returns (int256)"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9377:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9373:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"initializationExpression": {
													"assignments": [
														791
													],
													"declarations": [
														{
															"constant": false,
															"id": 791,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 831,
															"src": "9359:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 790,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "9359:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 793,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9370:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9359:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9406:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "9406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 801,
													"nodeType": "ExpressionStatement",
													"src": "9406:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9355:284:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 832,
													"name": "teamsArr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 784,
													"src": "9658:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
														"typeString": "int256[] memory"
													}
												},
												"functionReturnParameters": 771,
												"id": 833,
												"nodeType": "Return",
												"src": "9651:15:0"
											}
										]
									},
									"documentation": null,
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showCellOwners",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9111:2:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "9134:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 768,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "9134:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 769,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9134:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9133:17:0"
									},
									"scope": 836,
									"src": "9088:587:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 837,
							"src": "1418:8267:0"
						}
					],
					"src": "0:9687:0"
				},
				"id": 0
			}
		}
	}
}