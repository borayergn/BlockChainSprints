{
	"id": "45688de68cbd0719767aa0ba44ec7dcb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Sprint1.sol": {
				"content": "pragma solidity ^0.5.17;\r\n\r\n\r\ncontract PowerContractInterface{\r\n\r\n     function getCellHash(int256 x, int256 y) public view returns (bytes32);\r\n     function getCellNonce(int256 x, int256 y) public view returns (bytes32);\r\n     function getCellPower(int256 x, int256 y) public view returns (int256);\r\n     function getCellTeamNumber(int256 x, int256 y) public view returns (int256);\r\n     function getSprintNumber() public view returns (int256);\r\n     function getXdimension() public view returns (int256);\r\n     function getYdimension() public view returns (int256);\r\n     function getTeamNumberFromAccount(address teamAccount) public view returns (int);\r\n     function setMyTeamContract(address contractAddress) public;\r\n     function getMyTeamContract() public view returns (address);\r\n     function getMyTeamCount() public view returns (int);\r\n     function getMyTeamCallCount() public view returns (int);\r\n     function showCellTeamNumbers() public view returns (string memory);\r\n     function getMyTeamNumber() public view returns (int);\r\n     function showLeaderBoard() public view returns (string memory);\r\n     function showLeaderBoard_Calls() public view returns (string memory);\r\n     function getTxOrigin() public view returns (address);\r\n     function setCellsFromContract(int x, int y, bytes32 nonce) public payable returns (bytes32);\r\n     function getTotalCalls() public view returns (uint);\r\n\r\n}\r\n\r\n\r\ncontract BaBoBa{\r\n     /*\r\n     address powerContractAddres = 0xA7c40D644bDB571F98D72A08AF2A1Fb4Ab4f24fe;\r\n     address myAdd = 0x06D99001C37C88f996f629698c822F19dB68388D;\r\n     PowerContractInterface pc_interface = PowerContractInterface(powerContractAddres);\r\n\r\n     function arrangeContract() public returns(address){\r\n          \r\n          pc_interface.setMyTeamContract(myAdd); \r\n          address teamAddress = pc_interface.getMyTeamContract();\r\n          return teamAddress;\r\n     }\r\n\r\n     function teamNumber() public view returns(int){\r\n          int team_number = pc_interface.getMyTeamNumber();\r\n          return team_number;\r\n     }\r\n\r\n     address public t_address =  arrangeContract();\r\n\r\n     \r\n     \r\n     function findNonce(int x,int y)public view returns(uint256,bytes32,uint256,uint256,uint256){\r\n\r\n          int256 teamNo = pc_interface.getMyTeamNumber();\r\n          bytes32 bytes32_TeamNo = bytes32(teamNo);\r\n\r\n          bytes32  cellHash = pc_interface.getCellHash(x,y);\r\n          uint256  pow = uint256(pc_interface.getCellPower(x,y));\r\n          uint  nonce = 1; \r\n          bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n\r\n          uint  multiplication = uint(newHash)*(2**pow);\r\n          bytes32  finalHash = bytes32(multiplication);\r\n\r\n          uint256 int_cellHash = uint256(cellHash);\r\n          uint256 int_newHash = uint256(newHash);\r\n\r\n          if(int_cellHash > int_newHash){\r\n               while(int_cellHash > int_newHash){\r\n               int_newHash = uint256(sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)));\r\n\r\n               nonce++;\r\n                    }\r\n\r\n               //Nonce was returning one more than needed because of condition. So its one decreased here after loop.\r\n               nonce--;\r\n               }\r\n          \r\n               return (nonce,bytes32(nonce),int_cellHash,int_newHash,pow);\r\n          } \r\n*/\r\n\r\n     //To use this function on VMs other functions that interacts with power contract should be commented.\r\n     function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r\n\r\n          int256 teamNo = 5;\r\n          bytes32 bytes32_TeamNo = bytes32(teamNo);\r\n\r\n          bytes32  cellHash = hashOfCell;\r\n          uint256  pow = power;\r\n          uint  nonce = 1; \r\n          bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce));\r\n\r\n          uint  multiplication = uint(newHash)*(2**pow);\r\n          bytes32  finalHash = bytes32(multiplication);\r\n\r\n          uint256 int_cellHash = uint256(cellHash);\r\n          uint256 int_newHash = uint256(newHash);\r\n\r\n          if(int_cellHash > int_newHash){\r\n               while(int_cellHash > int_newHash){\r\n               int_newHash = uint256(sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)));\r\n\r\n               nonce++;\r\n                    }\r\n\r\n               //Nonce was returning one more than needed because of condition. So its one decreased here after loop.\r\n               nonce--;\r\n               }\r\n          \r\n               return (nonce,bytes32(nonce),int_cellHash,int_newHash,pow);\r\n\r\n\r\n     }\r\n          \r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Sprint1.sol": {
				"BaBoBa": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hashOfCell",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"name": "VM_Test_FindNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Sprint1.sol\":1418:4593  contract BaBoBa{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Sprint1.sol\":1418:4593  contract BaBoBa{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sprint1.sol\":1418:4593  contract BaBoBa{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Sprint1.sol\":1418:4593  contract BaBoBa{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x30a6e63d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Sprint1.sol\":3446:4576  function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"Sprint1.sol\":3446:4576  function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"Sprint1.sol\":3527:3534  uint256 */\n      0x00\n        /* \"Sprint1.sol\":3535:3542  bytes32 */\n      dup1\n        /* \"Sprint1.sol\":3543:3550  uint256 */\n      0x00\n        /* \"Sprint1.sol\":3551:3558  uint256 */\n      dup1\n        /* \"Sprint1.sol\":3559:3566  uint256 */\n      0x00\n        /* \"Sprint1.sol\":3582:3595  int256 teamNo */\n      dup1\n        /* \"Sprint1.sol\":3598:3599  5 */\n      0x05\n        /* \"Sprint1.sol\":3582:3599  int256 teamNo = 5 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3612:3634  bytes32 bytes32_TeamNo */\n      0x00\n        /* \"Sprint1.sol\":3645:3651  teamNo */\n      dup2\n        /* \"Sprint1.sol\":3637:3652  bytes32(teamNo) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":3612:3652  bytes32 bytes32_TeamNo = bytes32(teamNo) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3667:3684  bytes32  cellHash */\n      0x00\n        /* \"Sprint1.sol\":3687:3697  hashOfCell */\n      dup10\n        /* \"Sprint1.sol\":3667:3697  bytes32  cellHash = hashOfCell */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3710:3722  uint256  pow */\n      0x00\n        /* \"Sprint1.sol\":3725:3730  power */\n      dup10\n        /* \"Sprint1.sol\":3710:3730  uint256  pow = power */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3743:3754  uint  nonce */\n      0x00\n        /* \"Sprint1.sol\":3757:3758  1 */\n      0x01\n        /* \"Sprint1.sol\":3743:3758  uint  nonce = 1 */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3772:3788  bytes32  newHash */\n      0x00\n        /* \"Sprint1.sol\":3791:3846  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      0x02\n        /* \"Sprint1.sol\":3815:3823  cellHash */\n      dup5\n        /* \"Sprint1.sol\":3824:3838  bytes32_TeamNo */\n      dup7\n        /* \"Sprint1.sol\":3839:3844  nonce */\n      dup5\n        /* \"Sprint1.sol\":3798:3845  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sprint1.sol\":3798:3845  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Sprint1.sol\":3791:3846  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_8:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_8)\n    tag_10:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":3791:3846  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"Sprint1.sol\":3791:3846  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"Sprint1.sol\":3791:3846  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":3772:3846  bytes32  newHash = sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3861:3881  uint  multiplication */\n      0x00\n        /* \"Sprint1.sol\":3902:3905  pow */\n      dup4\n        /* \"Sprint1.sol\":3899:3900  2 */\n      0x02\n        /* \"Sprint1.sol\":3899:3905  2**pow */\n      exp\n        /* \"Sprint1.sol\":3889:3896  newHash */\n      dup3\n        /* \"Sprint1.sol\":3884:3897  uint(newHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":3884:3906  uint(newHash)*(2**pow) */\n      mul\n        /* \"Sprint1.sol\":3861:3906  uint  multiplication = uint(newHash)*(2**pow) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3919:3937  bytes32  finalHash */\n      0x00\n        /* \"Sprint1.sol\":3948:3962  multiplication */\n      dup2\n        /* \"Sprint1.sol\":3940:3963  bytes32(multiplication) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":3919:3963  bytes32  finalHash = bytes32(multiplication) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":3978:3998  uint256 int_cellHash */\n      0x00\n        /* \"Sprint1.sol\":4009:4017  cellHash */\n      dup7\n        /* \"Sprint1.sol\":4001:4018  uint256(cellHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":3978:4018  uint256 int_cellHash = uint256(cellHash) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":4031:4050  uint256 int_newHash */\n      0x00\n        /* \"Sprint1.sol\":4061:4068  newHash */\n      dup5\n        /* \"Sprint1.sol\":4053:4069  uint256(newHash) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":4031:4069  uint256 int_newHash = uint256(newHash) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":4102:4113  int_newHash */\n      dup1\n        /* \"Sprint1.sol\":4087:4099  int_cellHash */\n      dup3\n        /* \"Sprint1.sol\":4087:4113  int_cellHash > int_newHash */\n      gt\n        /* \"Sprint1.sol\":4084:4476  if(int_cellHash > int_newHash){\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"Sprint1.sol\":4132:4312  while(int_cellHash > int_newHash){\r... */\n    tag_14:\n        /* \"Sprint1.sol\":4153:4164  int_newHash */\n      dup1\n        /* \"Sprint1.sol\":4138:4150  int_cellHash */\n      dup3\n        /* \"Sprint1.sol\":4138:4164  int_cellHash > int_newHash */\n      gt\n        /* \"Sprint1.sol\":4132:4312  while(int_cellHash > int_newHash){\r... */\n      iszero\n      tag_15\n      jumpi\n        /* \"Sprint1.sol\":4205:4260  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      0x02\n        /* \"Sprint1.sol\":4229:4237  cellHash */\n      dup9\n        /* \"Sprint1.sol\":4238:4252  bytes32_TeamNo */\n      dup11\n        /* \"Sprint1.sol\":4253:4258  nonce */\n      dup9\n        /* \"Sprint1.sol\":4212:4259  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sprint1.sol\":4212:4259  abi.encodePacked(cellHash,bytes32_TeamNo,nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Sprint1.sol\":4205:4260  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_16:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_16)\n    tag_18:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":4205:4260  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"Sprint1.sol\":4205:4260  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"Sprint1.sol\":4205:4260  sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":4197:4261  uint256(sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce))) */\n      0x00\n      shr\n        /* \"Sprint1.sol\":4183:4261  int_newHash = uint256(sha256(abi.encodePacked(cellHash,bytes32_TeamNo,nonce))) */\n      swap1\n      pop\n        /* \"Sprint1.sol\":4281:4288  nonce++ */\n      dup6\n      dup1\n      0x01\n      add\n      swap7\n      pop\n      pop\n        /* \"Sprint1.sol\":4132:4312  while(int_cellHash > int_newHash){\r... */\n      jump(tag_14)\n    tag_15:\n        /* \"Sprint1.sol\":4450:4457  nonce-- */\n      dup6\n      dup1\n      0x01\n      swap1\n      sub\n      swap7\n      pop\n      pop\n        /* \"Sprint1.sol\":4084:4476  if(int_cellHash > int_newHash){\r... */\n    tag_13:\n        /* \"Sprint1.sol\":4513:4518  nonce */\n      dup6\n        /* \"Sprint1.sol\":4527:4532  nonce */\n      dup7\n        /* \"Sprint1.sol\":4519:4533  bytes32(nonce) */\n      0x00\n      shl\n        /* \"Sprint1.sol\":4534:4546  int_cellHash */\n      dup4\n        /* \"Sprint1.sol\":4547:4558  int_newHash */\n      dup4\n        /* \"Sprint1.sol\":4559:4562  pow */\n      dup11\n        /* \"Sprint1.sol\":4505:4563  return (nonce,bytes32(nonce),int_cellHash,int_newHash,pow) */\n      swap15\n      pop\n      swap15\n      pop\n      swap15\n      pop\n      swap15\n      pop\n      swap15\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Sprint1.sol\":3446:4576  function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r... */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582015cc77e3a1844ba01c6ef6b2965cf19fe4184a5ba45abb2e5c36cdebfb5a331264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610308806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806330a6e63d14610030575b600080fd5b6100666004803603604081101561004657600080fd5b810190808035906020019092919080359060200190929190505050610098565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6000806000806000806005905060008160001b905060008990506000899050600060019050600060028486846040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b602083106101245780518252602082019150602081019050602083039250610101565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610166573d6000803e3d6000fd5b5050506040513d602081101561017b57600080fd5b8101908080519060200190929190505050905060008360020a8260001c02905060008160001b905060008660001c905060008460001c9050808211156102ad575b808211156102a3576002888a886040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b602083106102295780518252602082019150602081019050602083039250610206565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561026b573d6000803e3d6000fd5b5050506040513d602081101561028057600080fd5b810190808051906020019092919050505060001c905085806001019650506101bc565b8580600190039650505b858660001b83838a9e509e509e509e509e5050505050505050505050929550929590935056fea265627a7a7231582015cc77e3a1844ba01c6ef6b2965cf19fe4184a5ba45abb2e5c36cdebfb5a331264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x30A6E63D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP10 SWAP1 POP PUSH1 0x0 DUP10 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x124 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x101 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 SHR SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x2 DUP9 DUP11 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x229 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x206 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 SHR SWAP1 POP DUP6 DUP1 PUSH1 0x1 ADD SWAP7 POP POP PUSH2 0x1BC JUMP JUMPDEST DUP6 DUP1 PUSH1 0x1 SWAP1 SUB SWAP7 POP POP JUMPDEST DUP6 DUP7 PUSH1 0x0 SHL DUP4 DUP4 DUP11 SWAP15 POP SWAP15 POP SWAP15 POP SWAP15 POP SWAP15 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ISZERO 0xCC PUSH24 0xE3A1844BA01C6EF6B2965CF19FE4184A5BA45ABB2E5C36CD 0xEB 0xFB GAS CALLER SLT PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1418:3175:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1418:3175:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806330a6e63d14610030575b600080fd5b6100666004803603604081101561004657600080fd5b810190808035906020019092919080359060200190929190505050610098565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6000806000806000806005905060008160001b905060008990506000899050600060019050600060028486846040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b602083106101245780518252602082019150602081019050602083039250610101565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610166573d6000803e3d6000fd5b5050506040513d602081101561017b57600080fd5b8101908080519060200190929190505050905060008360020a8260001c02905060008160001b905060008660001c905060008460001c9050808211156102ad575b808211156102a3576002888a886040516020018084815260200183815260200182815260200193505050506040516020818303038152906040526040518082805190602001908083835b602083106102295780518252602082019150602081019050602083039250610206565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561026b573d6000803e3d6000fd5b5050506040513d602081101561028057600080fd5b810190808051906020019092919050505060001c905085806001019650506101bc565b8580600190039650505b858660001b83838a9e509e509e509e509e5050505050505050505050929550929590935056fea265627a7a7231582015cc77e3a1844ba01c6ef6b2965cf19fe4184a5ba45abb2e5c36cdebfb5a331264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x30A6E63D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP10 SWAP1 POP PUSH1 0x0 DUP10 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x124 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x101 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 EXP DUP3 PUSH1 0x0 SHR MUL SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 SHR SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x2 DUP9 DUP11 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x229 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x206 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 SHR SWAP1 POP DUP6 DUP1 PUSH1 0x1 ADD SWAP7 POP POP PUSH2 0x1BC JUMP JUMPDEST DUP6 DUP1 PUSH1 0x1 SWAP1 SUB SWAP7 POP POP JUMPDEST DUP6 DUP7 PUSH1 0x0 SHL DUP4 DUP4 DUP11 SWAP15 POP SWAP15 POP SWAP15 POP SWAP15 POP SWAP15 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ISZERO 0xCC PUSH24 0xE3A1844BA01C6EF6B2965CF19FE4184A5BA45ABB2E5C36CD 0xEB 0xFB GAS CALLER SLT PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1418:3175:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1418:3175:0;;;;;;;;;;;;;;;;;;;3446:1130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3446:1130:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3527:7;3535;3543;3551;3559;3582:13;3598:1;3582:17;;3612:22;3645:6;3637:15;;3612:40;;3667:17;3687:10;3667:30;;3710:12;3725:5;3710:20;;3743:11;3757:1;3743:15;;3772:16;3791:55;3815:8;3824:14;3839:5;3798:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3798:47:0;;;3791:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3791:55:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3791:55:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3791:55:0;;;;;;;;;;;;;;;;3772:74;;3861:20;3902:3;3899:1;:6;3889:7;3884:13;;:22;3861:45;;3919:18;3948:14;3940:23;;3919:44;;3978:20;4009:8;4001:17;;3978:40;;4031:19;4061:7;4053:16;;4031:38;;4102:11;4087:12;:26;4084:392;;;4132:180;4153:11;4138:12;:26;4132:180;;;4205:55;4229:8;4238:14;4253:5;4212:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4212:47:0;;;4205:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4205:55:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4205:55:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4205:55:0;;;;;;;;;;;;;;;;4197:64;;4183:78;;4281:7;;;;;;;4132:180;;;4450:7;;;;;;;;4084:392;4513:5;4527;4519:14;;4534:12;4547:11;4559:3;4505:58;;;;;;;;;;;;;;;;;;;;3446:1130;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "155200",
								"executionCost": "202",
								"totalCost": "155402"
							},
							"external": {
								"VM_Test_FindNonce(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "MSTORE"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "POP"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "DUP1"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "CODECOPY"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 4593,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582015cc77e3a1844ba01c6ef6b2965cf19fe4184a5ba45abb2e5c36cdebfb5a331264736f6c63430005110032",
									".code": [
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "LT"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "SHR"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "30A6E63D"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "EQ"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 4593,
											"name": "REVERT"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MLOAD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP7"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP5"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP4"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "MLOAD"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SUB"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "RETURN"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 3527,
											"end": 3534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "DUP1"
										},
										{
											"begin": 3543,
											"end": 3550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "DUP1"
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3582,
											"end": 3599,
											"name": "SWAP1"
										},
										{
											"begin": 3582,
											"end": 3599,
											"name": "POP"
										},
										{
											"begin": 3612,
											"end": 3634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP2"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "SHL"
										},
										{
											"begin": 3612,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3612,
											"end": 3652,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "DUP10"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3730,
											"name": "DUP10"
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3743,
											"end": 3758,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3758,
											"name": "POP"
										},
										{
											"begin": 3772,
											"end": 3788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3815,
											"end": 3823,
											"name": "DUP5"
										},
										{
											"begin": 3824,
											"end": 3838,
											"name": "DUP7"
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "DUP5"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MLOAD"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP1"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP5"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP2"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP4"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP2"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP3"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP2"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "SWAP4"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "POP"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "POP"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "POP"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "POP"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "SWAP1"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP3"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP4"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP2"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP4"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SUB"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP2"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP6"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "GAS"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "STATICCALL"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP2"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP3"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP2"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3772,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3772,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "DUP4"
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "EXP"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "DUP3"
										},
										{
											"begin": 3884,
											"end": 3897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3897,
											"name": "SHR"
										},
										{
											"begin": 3884,
											"end": 3906,
											"name": "MUL"
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "SWAP1"
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "DUP2"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "SHL"
										},
										{
											"begin": 3919,
											"end": 3963,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3963,
											"name": "POP"
										},
										{
											"begin": 3978,
											"end": 3998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "DUP7"
										},
										{
											"begin": 4001,
											"end": 4018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4018,
											"name": "SHR"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "SWAP1"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP"
										},
										{
											"begin": 4031,
											"end": 4050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "DUP5"
										},
										{
											"begin": 4053,
											"end": 4069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4069,
											"name": "SHR"
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "SWAP1"
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "POP"
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "DUP1"
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP3"
										},
										{
											"begin": 4087,
											"end": 4113,
											"name": "GT"
										},
										{
											"begin": 4084,
											"end": 4476,
											"name": "ISZERO"
										},
										{
											"begin": 4084,
											"end": 4476,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4084,
											"end": 4476,
											"name": "JUMPI"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "JUMPDEST"
										},
										{
											"begin": 4153,
											"end": 4164,
											"name": "DUP1"
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "DUP3"
										},
										{
											"begin": 4138,
											"end": 4164,
											"name": "GT"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "ISZERO"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "JUMPI"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4229,
											"end": 4237,
											"name": "DUP9"
										},
										{
											"begin": 4238,
											"end": 4252,
											"name": "DUP11"
										},
										{
											"begin": 4253,
											"end": 4258,
											"name": "DUP9"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MLOAD"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP1"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP5"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP4"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP3"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "SWAP4"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "POP"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "POP"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "POP"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "POP"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4259,
											"name": "MSTORE"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "MLOAD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP3"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "MLOAD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "ADD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP4"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "ADD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP2"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "MLOAD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP4"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SUB"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP2"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP6"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "GAS"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "STATICCALL"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "MLOAD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP2"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "ADD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "MLOAD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "ADD"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP3"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP2"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4205,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4197,
											"end": 4261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4261,
											"name": "SHR"
										},
										{
											"begin": 4183,
											"end": 4261,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4261,
											"name": "POP"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP6"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP1"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "ADD"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "SWAP7"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "POP"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "POP"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "JUMP"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4132,
											"end": 4312,
											"name": "JUMPDEST"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP6"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP1"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "SWAP1"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "SUB"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "SWAP7"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "POP"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "POP"
										},
										{
											"begin": 4084,
											"end": 4476,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4084,
											"end": 4476,
											"name": "JUMPDEST"
										},
										{
											"begin": 4513,
											"end": 4518,
											"name": "DUP6"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP7"
										},
										{
											"begin": 4519,
											"end": 4533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4533,
											"name": "SHL"
										},
										{
											"begin": 4534,
											"end": 4546,
											"name": "DUP4"
										},
										{
											"begin": 4547,
											"end": 4558,
											"name": "DUP4"
										},
										{
											"begin": 4559,
											"end": 4562,
											"name": "DUP11"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "SWAP15"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "SWAP15"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "SWAP15"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "SWAP15"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "SWAP15"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4563,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP3"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP6"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "SWAP4"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 4576,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"VM_Test_FindNonce(bytes32,uint256)": "30a6e63d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashOfCell\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"VM_Test_FindNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sprint1.sol\":\"BaBoBa\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sprint1.sol\":{\"keccak256\":\"0x5c5feba140d0699a27324632f4b58bc2755b231a964b7a789d53fa645be53a18\",\"urls\":[\"bzz-raw://632081659659921745d670aa1b4cfe8fa2f17817b7ca816ada0430379356636b\",\"dweb:/ipfs/QmYN8yL8SVadPGoTBKBS2jzazZrnkxFrf6pRWHvooTfM1J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"PowerContractInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellNonce",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellPower",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "getCellTeamNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamCallCount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamCount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getMyTeamNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getSprintNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "teamAccount",
									"type": "address"
								}
							],
							"name": "getTeamNumberFromAccount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTotalCalls",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTxOrigin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getXdimension",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getYdimension",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "int256",
									"name": "x",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								},
								{
									"internalType": "bytes32",
									"name": "nonce",
									"type": "bytes32"
								}
							],
							"name": "setCellsFromContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setMyTeamContract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showCellTeamNumbers",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showLeaderBoard",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showLeaderBoard_Calls",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCellHash(int256,int256)": "35d45c1d",
							"getCellNonce(int256,int256)": "e628daf5",
							"getCellPower(int256,int256)": "e4db6446",
							"getCellTeamNumber(int256,int256)": "912c2162",
							"getMyTeamCallCount()": "f42ec501",
							"getMyTeamContract()": "5e94a6a4",
							"getMyTeamCount()": "271deb26",
							"getMyTeamNumber()": "b2de2d40",
							"getSprintNumber()": "4554b4dd",
							"getTeamNumberFromAccount(address)": "cfd5f1d0",
							"getTotalCalls()": "ff1cd21d",
							"getTxOrigin()": "b8077e28",
							"getXdimension()": "26c19e40",
							"getYdimension()": "fafe7005",
							"setCellsFromContract(int256,int256,bytes32)": "3f8e0b48",
							"setMyTeamContract(address)": "2a9c1512",
							"showCellTeamNumbers()": "095d0958",
							"showLeaderBoard()": "9b697123",
							"showLeaderBoard_Calls()": "0f630158"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellPower\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"getCellTeamNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamCallCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyTeamNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSprintNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAccount\",\"type\":\"address\"}],\"name\":\"getTeamNumberFromAccount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCalls\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTxOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getXdimension\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getYdimension\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"setCellsFromContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setMyTeamContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showCellTeamNumbers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showLeaderBoard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showLeaderBoard_Calls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sprint1.sol\":\"PowerContractInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sprint1.sol\":{\"keccak256\":\"0x5c5feba140d0699a27324632f4b58bc2755b231a964b7a789d53fa645be53a18\",\"urls\":[\"bzz-raw://632081659659921745d670aa1b4cfe8fa2f17817b7ca816ada0430379356636b\",\"dweb:/ipfs/QmYN8yL8SVadPGoTBKBS2jzazZrnkxFrf6pRWHvooTfM1J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Sprint1.sol:94:11: Warning: Unused local variable.\n          bytes32  finalHash = bytes32(multiplication);\r\n          ^----------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3937,
					"file": "Sprint1.sol",
					"start": 3919
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Sprint1.sol:83:6: Warning: Function state mutability can be restricted to pure\n     function VM_Test_FindNonce(bytes32 hashOfCell,uint256 power) view public returns(uint256,bytes32,uint256,uint256,uint256){\r\n     ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 4576,
					"file": "Sprint1.sol",
					"start": 3446
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Sprint1.sol": {
				"ast": {
					"absolutePath": "Sprint1.sol",
					"exportedSymbols": {
						"BaBoBa": [
							240
						],
						"PowerContractInterface": [
							121
						]
					},
					"id": 241,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "PowerContractInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "92:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "92:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "102:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "91:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "132:9:0"
									},
									"scope": 121,
									"src": "71:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "171:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "171:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "181:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 13,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:20:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:9:0"
									},
									"scope": 121,
									"src": "149:72:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellPower",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "250:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 20,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "260:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "249:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "291:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 25,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:8:0"
									},
									"scope": 121,
									"src": "228:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCellTeamNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "333:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 29,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "343:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 31,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "332:20:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "374:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 34,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "373:8:0"
									},
									"scope": 121,
									"src": "306:76:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSprintNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "437:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 39,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:8:0"
									},
									"scope": 121,
									"src": "389:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getXdimension",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "498:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 44,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:8:0"
									},
									"scope": 121,
									"src": "452:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYdimension",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "559:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 49,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "558:8:0"
									},
									"scope": 121,
									"src": "513:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamNumberFromAccount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "teamAccount",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "608:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "607:21:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "650:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 56,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "650:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "649:5:0"
									},
									"scope": 121,
									"src": "574:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMyTeamContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "689:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:25:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:0"
									},
									"scope": 121,
									"src": "662:59:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "778:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:9:0"
									},
									"scope": 121,
									"src": "728:59:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "841:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 71,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "841:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:5:0"
									},
									"scope": 121,
									"src": "794:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamCallCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "904:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 76,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "904:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "903:5:0"
									},
									"scope": 121,
									"src": "853:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showCellTeamNumbers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "968:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "968:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:15:0"
									},
									"scope": 121,
									"src": "916:67:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTeamNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1038:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 86,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1038:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1037:5:0"
									},
									"scope": 121,
									"src": "990:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showLeaderBoard",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1098:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1098:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1097:15:0"
									},
									"scope": 121,
									"src": "1050:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "showLeaderBoard_Calls",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1174:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1173:15:0"
									},
									"scope": 121,
									"src": "1120:69:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTxOrigin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1240:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1239:9:0"
									},
									"scope": 121,
									"src": "1196:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCellsFromContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1286:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 105,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1286:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1293:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 107,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1293:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1300:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1285:29:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1338:9:0"
									},
									"scope": 121,
									"src": "1256:92:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalCalls",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1401:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:6:0"
									},
									"scope": 121,
									"src": "1355:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "30:1382:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "BaBoBa",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3567:1009:0",
										"statements": [
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"name": "teamNo",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3582:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 138,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3582:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "35",
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3598:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3582:17:0"
											},
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"name": "bytes32_TeamNo",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3612:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 142,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 145,
															"name": "teamNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3645:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3637:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3612:40:0"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "cellHash",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3667:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 148,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"argumentTypes": null,
													"id": 150,
													"name": "hashOfCell",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "3687:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3667:30:0"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"name": "pow",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3710:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"id": 154,
													"name": "power",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 125,
													"src": "3725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3710:20:0"
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3743:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3743:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 159,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3757:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3743:15:0"
											},
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"name": "newHash",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3772:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 160,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 165,
																	"name": "cellHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "3815:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 166,
																	"name": "bytes32_TeamNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "3824:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 167,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "3839:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 163,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3798:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3798:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3798:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 162,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3791:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3772:74:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"name": "multiplication",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3861:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 174,
																"name": "newHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3889:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3884:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3899:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "pow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "3902:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3899:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3898:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3884:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3861:45:0"
											},
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"name": "finalHash",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3919:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 182,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 187,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 185,
															"name": "multiplication",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3948:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:44:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"name": "int_cellHash",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3978:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 191,
															"name": "cellHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4009:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3978:40:0"
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"name": "int_newHash",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "4031:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 197,
															"name": "newHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4053:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4053:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4031:38:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "int_cellHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "4087:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 201,
														"name": "int_newHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4102:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4087:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 228,
												"nodeType": "IfStatement",
												"src": "4084:392:0",
												"trueBody": {
													"id": 227,
													"nodeType": "Block",
													"src": "4114:362:0",
													"statements": [
														{
															"body": {
																"id": 222,
																"nodeType": "Block",
																"src": "4165:147:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 206,
																				"name": "int_newHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 195,
																				"src": "4183:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 211,
																										"name": "cellHash",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 149,
																										"src": "4229:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 212,
																										"name": "bytes32_TeamNo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 143,
																										"src": "4238:14:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 213,
																										"name": "nonce",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 157,
																										"src": "4253:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 209,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 242,
																										"src": "4212:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 210,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": null,
																									"src": "4212:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 214,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4212:47:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 208,
																							"name": "sha256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 264,
																							"src": "4205:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4205:55:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 207,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4197:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint256"
																				},
																				"id": 216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4197:64:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4183:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 218,
																		"nodeType": "ExpressionStatement",
																		"src": "4183:78:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4281:7:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 219,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "4281:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 221,
																		"nodeType": "ExpressionStatement",
																		"src": "4281:7:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "int_cellHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "4138:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "int_newHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "4153:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4138:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 223,
															"nodeType": "WhileStatement",
															"src": "4132:180:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "4450:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 224,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "4450:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 226,
															"nodeType": "ExpressionStatement",
															"src": "4450:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 229,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4513:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 231,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "4527:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4519:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": "bytes32"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4519:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 233,
															"name": "int_cellHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4534:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 234,
															"name": "int_newHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "4547:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 235,
															"name": "pow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4559:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 236,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4512:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,bytes32,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 137,
												"id": 237,
												"nodeType": "Return",
												"src": "4505:58:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "VM_Test_FindNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "hashOfCell",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3473:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "power",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:34:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3543:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3526:41:0"
									},
									"scope": 240,
									"src": "3446:1130:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "1418:3175:0"
						}
					],
					"src": "0:4593:0"
				},
				"id": 0
			}
		}
	}
}